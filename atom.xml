<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不知有晋</title>
  
  
  <link href="http://chenfeng.org/atom.xml" rel="self"/>
  
  <link href="http://chenfeng.org/"/>
  <updated>2022-06-18T18:51:31.560Z</updated>
  <id>http://chenfeng.org/</id>
  
  <author>
    <name>CFONG</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL主键值不允许为NULL，为什么唯一索引值允许为NULL</title>
    <link href="http://chenfeng.org/2022/06/07/mysql/"/>
    <id>http://chenfeng.org/2022/06/07/mysql/</id>
    <published>2022-06-07T06:00:00.000Z</published>
    <updated>2022-06-18T18:51:31.560Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知，主键是唯一标识一行数据的KEY，并且主键值不能为NULL。</p><p>但是同样是唯一标识一行数据的唯一索引却允许值为NULL，看起来似乎有些费解。<br>根据NULL的定义，NULL表示的是未知，因此两个NULL比较的结果既不相等，也不不等，结果仍然是未知。<br>根据这个定义，多个NULL值的存在不违反唯一约束，所以是合理的。</p><p>执行以下SQL语句<br> SELECT IF(NULL&#x3D;NULL,1,2);<br>结果输出2，表示NULL不等于NULL。</p><p>所以当唯一索引值存在NULL时，查询的时候结果不唯一，破坏了唯一性。</p><p>总结如果不是业务需要（例如某个字段暂时未能获得），应该使索引值不为NULL，以保证查询结果的唯一性。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;众所周知，主键是唯一标识一行数据的KEY，并且主键值不能为NULL。&lt;/p&gt;
&lt;p&gt;但是同样是唯一标识一行数据的唯一索引却允许值为NULL，看起来似乎有些费解。&lt;br&gt;根据NULL的定义，NULL表示的是未知，因此两个NULL比较的结果既不相等，也不不等，结果仍然是未知。&lt;</summary>
      
    
    
    
    <category term="mysql" scheme="http://chenfeng.org/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://chenfeng.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>composer加载机制</title>
    <link href="http://chenfeng.org/2022/06/05/composer/"/>
    <id>http://chenfeng.org/2022/06/05/composer/</id>
    <published>2022-06-05T06:00:00.000Z</published>
    <updated>2022-06-21T14:16:32.099Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="ru-kou-wen-jian-index-php">入口文件 index.php</span><a href="#ru-kou-wen-jian-index-php" class="header-anchor">#</a></h1><p>引入 vendor 的 autoload.php 文件 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../vendor/autoload.php&#x27;</span>; </span><br></pre></td></tr></table></figure><h1><span id="vendor-x2f-autoload-php-wen-jian">vendor&#x2F;autoload.php 文件</span><a href="#vendor-x2f-autoload-php-wen-jian" class="header-anchor">#</a></h1><p>引入 composer 的 autoload_real.php 文件，然后调用 getLoader 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// autoload.php @generated by Composer</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/composer/autoload_real.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="title class_">ComposerAutoloaderInit558596bf02a1b04254bb0a6c8d3be828</span>::<span class="title function_ invoke__">getLoader</span>();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1><span id="vendor-x2f-composer-x2f-autoload-real-php-wen-jian">vendor&#x2F;composer&#x2F;autoload_real.php 文件</span><a href="#vendor-x2f-composer-x2f-autoload-real-php-wen-jian" class="header-anchor">#</a></h1><p>该文件包含<br><strong>ComposerAutoloaderInit558596bf02a1b04254bb0a6c8d3be828</strong> 类<br>和引入文件函数 <strong>composerRequire558596bf02a1b04254bb0a6c8d3be828()</strong> 。</p><h2><span id="getloader-fang-fa">getLoader方法</span><a href="#getloader-fang-fa" class="header-anchor">#</a></h2><h3><span id="ban-ben-jian-ce">版本检测</span><a href="#ban-ben-jian-ce" class="header-anchor">#</a></h3><p>首先引入文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require __DIR__ . &#x27;/platform_check.php&#x27;;</span><br></pre></td></tr></table></figure><p>检查 composer 依赖需要的 php 版本与环境的 php 版本是否一致，如果环境的 php 版本低于要求的版本，则会返回错误信息。</p><h3><span id="shi-li-hua-classloader-lei">实例化 ClassLoader 类</span><a href="#shi-li-hua-classloader-lei" class="header-anchor">#</a></h3><p>使用 spl_autoload_register 注册 loadClassLoader 方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">loadClassLoader</span>(<span class="params"><span class="variable">$class</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&#x27;Composer\Autoload\ClassLoader&#x27;</span> === <span class="variable">$class</span>) &#123;</span><br><span class="line">        <span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/ClassLoader.php&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>loadClassLoader 方法接收一个类名参数，当类名是 Composer\Autoload\ClassLoader 的时候，引入同级目录下的 ClassLoader.php 文件。</p><p>实例化 \Composer\Autoload\ClassLoader 类，参数是 vendor 目录的绝对路径，返回一个加载器实例 $loader。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">self</span>::<span class="variable">$loader</span> = <span class="variable">$loader</span> = <span class="keyword">new</span> <span class="title class_">\Composer\Autoload\ClassLoader</span>(\<span class="title function_ invoke__">dirname</span>(\<span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>)));</span><br></pre></td></tr></table></figure><p>使用 spl_autoload_unregister 取消注册 loadClassLoader 方法。</p><h3><span id="chu-shi-hua-loader-shi-li-de-shu-xing">初始化 $loader 实例的属性</span><a href="#chu-shi-hua-loader-shi-li-de-shu-xing" class="header-anchor">#</a></h3><p>初始化 $loader 实例的属性有： prefixLengthsPsr4,prefixDirsPsr4,fallbackDirsPsr0,classMap 。</p><p>根据环境变量的值（如php版本，是否定义HHVM_VERSION常量等）判断是否使用静态加载方式。</p><p>若使用静态加载方式，则引入同级目录下的 autoload_static.php 文件，并且使用 call_user_func 方法回调 getInitializer 方法，参数是加载器实例$loader。</p><p>autoload_static.php 文件定义了以上几个属性，通过 getInitializer 方法实现 $loader 属性初始化；</p><p>若不使用静态加载方式，则分别引入同级目录下的 autoload_namespaces.php,autoload_psr4.php,autoload_classmap.php 文件，再调用 $loader 实例的 set(),setPsr4(),addClassMap() 方法实现 $loader 属性初始化；</p><h3><span id="zhu-ce-zi-dong-jia-zai-han-shu">注册自动加载函数</span><a href="#zhu-ce-zi-dong-jia-zai-han-shu" class="header-anchor">#</a></h3><p>使用 $loader 实例调用 register 方法，注册加载函数，register 方法体下面再说。</p><h3><span id="yin-ru-dan-wen-jian">引入单文件</span><a href="#yin-ru-dan-wen-jian" class="header-anchor">#</a></h3><p>通过读取配置文件，获取单文件映射数组，通过 composerRequire558596bf02a1b04254bb0a6c8d3be828 函数引入单文件。</p><h3><span id="fan-hui-jia-zai-qi-loader">返回加载器 $loader</span><a href="#fan-hui-jia-zai-qi-loader" class="header-anchor">#</a></h3><p>最后返回加载器 $loader 。</p><h1><span id="vendor-x2f-composer-x2f-classloader-php-wen-jian">vendor&#x2F;composer&#x2F;ClassLoader.php 文件</span><a href="#vendor-x2f-composer-x2f-classloader-php-wen-jian" class="header-anchor">#</a></h1><h2><span id="register-fang-fa">register 方法</span><a href="#register-fang-fa" class="header-anchor">#</a></h2><p>使用 spl_autoload_register 注册加载器方法 loadClass ，并且添加到函数队列之首。</p><h2><span id="loadclass-fang-fa">loadClass 方法</span><a href="#loadclass-fang-fa" class="header-anchor">#</a></h2><p>调用 findFile 方法，通过类名查找类，返回类的绝对路径，然后调用 includeFile 方法，引入文件。</p><h2><span id="findfile-fang-fa">findFile 方法</span><a href="#findfile-fang-fa" class="header-anchor">#</a></h2><p>findFile 方法使用 $loader 加载器在前面初始化的属性，根据类名查找类的绝对路径，后返回。</p><h3><span id="shu-xing-zhi">属性值</span><a href="#shu-xing-zhi" class="header-anchor">#</a></h3><p>ClassLoader 类有几个重要的属性。</p><p>classMap 属性保存类名与文件绝对路径的映射</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$classMap</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;Attribute&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/symfony/polyfill-php80/Resources/stubs/Attribute.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Composer\\InstalledVersions&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/composer/InstalledVersions.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PhpToken&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/symfony/polyfill-php80/Resources/stubs/PhpToken.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Stringable&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/symfony/polyfill-php80/Resources/stubs/Stringable.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;UnhandledMatchError&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/symfony/polyfill-php80/Resources/stubs/UnhandledMatchError.php&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ValueError&#x27;</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/symfony/polyfill-php80/Resources/stubs/ValueError.php&#x27;</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>prefixLengthsPsr4 和 prefixDirsPsr4 属性保存命名空间与文件相对路径的映射</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存命名空间与文件相对路径的映射，</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$prefixDirsPsr4</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;think\\view\\driver\\&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/think-view/src&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;think\\trace\\&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/think-trace/src&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;think\\&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/framework/src/think&#x27;</span>,</span><br><span class="line">        <span class="number">1</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/think-helper/src&#x27;</span>,</span><br><span class="line">        <span class="number">2</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/think-orm/src&#x27;</span>,</span><br><span class="line">        <span class="number">3</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/..&#x27;</span> . <span class="string">&#x27;/topthink/think-template/src&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;app\\&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../..&#x27;</span> . <span class="string">&#x27;/app&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="comment">// 以下省略</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">// 保存命名空间首字母为键的二维数组</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$prefixLengthsPsr4</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;t&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="string">&#x27;think\\view\\driver\\&#x27;</span> =&gt; <span class="number">18</span>,</span><br><span class="line">        <span class="string">&#x27;think\\trace\\&#x27;</span> =&gt; <span class="number">12</span>,</span><br><span class="line">        <span class="string">&#x27;think\\&#x27;</span> =&gt; <span class="number">6</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&#x27;a&#x27;</span> =&gt; </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">        <span class="string">&#x27;app\\&#x27;</span> =&gt; <span class="number">4</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="comment">// 以下省略</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>fallbackDirsPsr0 属性保存 $rootPath&#x2F;extend&#x2F; 目录下的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$fallbackDirsPsr0</span> = <span class="keyword">array</span> (</span><br><span class="line">    <span class="number">0</span> =&gt; <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../..&#x27;</span> . <span class="string">&#x27;/extend&#x27;</span>,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3><span id="cha-zhao-classmap-lei-ying-she">查找 classMap 类映射</span><a href="#cha-zhao-classmap-lei-ying-she" class="header-anchor">#</a></h3><p>首先查找类名与文件绝对路径的映射，找到则返回文件路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// class map lookup</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;classMap[<span class="variable">$class</span>])) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;classMap[<span class="variable">$class</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若以上没有匹配到目标类，则继续向下执行。</p><p>调用 findFileWithExtension 方法，使用其余3个属性查找文件路径。</p><h2><span id="findfilewithextension-fang-fa">findFileWithExtension 方法</span><a href="#findfilewithextension-fang-fa" class="header-anchor">#</a></h2><h3><span id="cha-zhao-pi-pei-de-ming-ming-kong-jian">查找匹配的命名空间</span><a href="#cha-zhao-pi-pei-de-ming-ming-kong-jian" class="header-anchor">#</a></h3><p>findFileWithExtension 方法的第一个参数是一个类名，通过类名的首字母判断 prefixLengthsPsr4 属性是否存在对应的命名空间。<br>如果不存在的话，就进入下一个属性 fallbackDirsPsr0 的判断。</p><p>如果存在的话，进入一个 while 循环，直到找到第一个存在的文件路径后返回。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PSR-4 lookup</span></span><br><span class="line"><span class="variable">$logicalPathPsr4</span> = <span class="title function_ invoke__">strtr</span>(<span class="variable">$class</span>, <span class="string">&#x27;\\&#x27;</span>, DIRECTORY_SEPARATOR) . <span class="variable">$ext</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$first</span> = <span class="variable">$class</span>[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;prefixLengthsPsr4[<span class="variable">$first</span>])) &#123;</span><br><span class="line">    <span class="variable">$subPath</span> = <span class="variable">$class</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">false</span> !== <span class="variable">$lastPos</span> = <span class="title function_ invoke__">strrpos</span>(<span class="variable">$subPath</span>, <span class="string">&#x27;\\&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$subPath</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$subPath</span>, <span class="number">0</span>, <span class="variable">$lastPos</span>);</span><br><span class="line">        <span class="variable">$search</span> = <span class="variable">$subPath</span> . <span class="string">&#x27;\\&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;prefixDirsPsr4[<span class="variable">$search</span>])) &#123;</span><br><span class="line">            <span class="variable">$pathEnd</span> = DIRECTORY_SEPARATOR . <span class="title function_ invoke__">substr</span>(<span class="variable">$logicalPathPsr4</span>, <span class="variable">$lastPos</span> + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;prefixDirsPsr4[<span class="variable">$search</span>] <span class="keyword">as</span> <span class="variable">$dir</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span> = <span class="variable">$dir</span> . <span class="variable">$pathEnd</span>)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>while 循环里，首先找到类名里最后一个反斜杠 “&quot; 的位置 $lastPos ,<br>从第0位到 $lastPos 位截取类名，得到一个字符串 $subPath ，<br>字符串 $subPath 后拼接一个反斜杠 “&quot;，得到一个[可能是的]命名空间 $search ，<br>prefixDirsPsr4 属性保存命名空间与相对路径的映射，判断 $search 是否存在 prefixDirsPsr4 映射中，<br>如果存在，则返回一个数组，包含有一个或者多个路径，<br>从第 $lastPos + 1 位到最后一位截取类名，保留除命中的命名空间外的类名 $pathEnd ， $pathEnd 与命名空间映射的相对路径拼接成绝对路径，判断文件路径是否存在，存在则返回文件路径。</p><h3><span id="mu-biao-lei-zai-rootpath-x2f-extend-x2f-mu-lu">目标类在 $rootPath&#x2F;extend&#x2F; 目录</span><a href="#mu-biao-lei-zai-rootpath-x2f-extend-x2f-mu-lu" class="header-anchor">#</a></h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// PSR-0 fallback dirs</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;fallbackDirsPsr0 <span class="keyword">as</span> <span class="variable">$dir</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span> = <span class="variable">$dir</span> . DIRECTORY_SEPARATOR . <span class="variable">$logicalPathPsr0</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历 fallbackDirsPsr0 属性，与类名拼接成一个路径，文件路径真实存在则返回。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;span id=&quot;ru-kou-wen-jian-index-php&quot;&gt;入口文件 index.php&lt;/span&gt;&lt;a href=&quot;#ru-kou-wen-jian-index-php&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;引入 ven</summary>
      
    
    
    
    <category term="php" scheme="http://chenfeng.org/categories/php/"/>
    
    
    <category term="php" scheme="http://chenfeng.org/tags/php/"/>
    
    <category term="composer" scheme="http://chenfeng.org/tags/composer/"/>
    
  </entry>
  
  <entry>
    <title>PHP trait特性</title>
    <link href="http://chenfeng.org/2022/06/05/trait/"/>
    <id>http://chenfeng.org/2022/06/05/trait/</id>
    <published>2022-06-05T06:00:00.000Z</published>
    <updated>2022-06-21T14:33:15.210Z</updated>
    
    <content type="html"><![CDATA[<p>trait是一种代码复用的方法，使开发人员能够在不同层次结构的类中服用方法，增加类的灵活性。</p><p>继承机制为类型相似的子类提供方法复用的模板，<br>对于类型各异，处于不用层级结构的类，可以使用trait实现代码复用机制。</p><h2><span id="shi-yong-trait-fu-yong-fang-fa">使用trait复用方法</span><a href="#shi-yong-trait-fu-yong-fang-fa" class="header-anchor">#</a></h2><p>在调用类方法的时候通常都需要实例化类，并且实例化类几乎是每个类都需要的方法，因此复用实例化方法就显得有必要。</p><figure class="highlight php"><figcaption><span>Instances.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">trait</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Instances</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$instance</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__TRAIT__</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_null</span>(<span class="built_in">self</span>::<span class="variable">$instance</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">self</span>::<span class="variable">$instance</span> = <span class="keyword">new</span> <span class="built_in">static</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>Dog.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">trait</span>\<span class="title">Instances</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Instances</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Dog eat.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>Desk.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">trait</span>\<span class="title">Instances</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Desk</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Instances</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">color</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Desk white.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>Road.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">trait</span>\<span class="title">Instances</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Road</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Instances</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">length</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Road 1km.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明 trait 语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">trait</span>\<span class="title">Instances</span>;</span><br></pre></td></tr></table></figure><p>和使用 trait</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Instances</span>;</span><br></pre></td></tr></table></figure><p>必须要在同一个文件里面同时存在，不能分别存在于父类和子类。</p><figure class="highlight php"><figcaption><span>TraitC.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">app</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">controller</span>\<span class="title">Dog</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">controller</span>\<span class="title">Desk</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">controller</span>\<span class="title">Road</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TraitC</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callDesk</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Desk</span>::<span class="title function_ invoke__">getInstance</span>()-&gt;<span class="title function_ invoke__">color</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callDog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Dog</span>::<span class="title function_ invoke__">getInstance</span>()-&gt;<span class="title function_ invoke__">eat</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callRoad</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Road</span>::<span class="title function_ invoke__">getInstance</span>()-&gt;<span class="title function_ invoke__">length</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用后依次返回：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tp\trait\Instances</span><br><span class="line">Desk white.</span><br><span class="line"></span><br><span class="line">tp\trait\Instances</span><br><span class="line">Dog eat.</span><br><span class="line"></span><br><span class="line">tp\trait\Instances</span><br><span class="line">Road 1km.</span><br></pre></td></tr></table></figure><h2><span id="trait-de-you-xian-ji">trait的优先级</span><a href="#trait-de-you-xian-ji" class="header-anchor">#</a></h2><p>从基类继承的成员会被 trait 插入的成员所覆盖。<br>优先顺序是来自当前类的成员覆盖了 trait 的方法，<br>而 trait 则覆盖了被继承的方法。</p><figure class="highlight php"><figcaption><span>Dog.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Dog eat.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>Animal.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">tp</span>\<span class="title class_">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">tp</span>\<span class="title">trait</span>\<span class="title">Instances</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Instances</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$instance</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">is_null</span>(<span class="built_in">self</span>::<span class="variable">$instance</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">self</span>::<span class="variable">$instance</span> = <span class="keyword">new</span> <span class="built_in">static</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用Dog类的eat方法后返回：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tp\controller\Animal</span><br><span class="line">Dog eat.</span><br></pre></td></tr></table></figure><p>表明使用 Animal 类的 getInstance 方法实例化 Animal 类，最后调用 Dog 类的 eat 方法。</p><p>此处 Animal 是 Dog 的基类，但是在 Animal 类中引入了 trait ，所以 Animal 被当作当前类，<br>并且 Animal 没有父类，所以 Animal 类中的 getInstance 方法优先级最高，优先执行。</p><h2><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h2><p><a href="https://www.php.net/manual/zh/language.oop5.traits.php">Trait</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;trait是一种代码复用的方法，使开发人员能够在不同层次结构的类中服用方法，增加类的灵活性。&lt;/p&gt;
&lt;p&gt;继承机制为类型相似的子类提供方法复用的模板，&lt;br&gt;对于类型各异，处于不用层级结构的类，可以使用trait实现代码复用机制。&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;sh</summary>
      
    
    
    
    <category term="php" scheme="http://chenfeng.org/categories/php/"/>
    
    
    <category term="php" scheme="http://chenfeng.org/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>MySQL自增ID和业务字段ID做主键的区别</title>
    <link href="http://chenfeng.org/2022/06/04/mysql/"/>
    <id>http://chenfeng.org/2022/06/04/mysql/</id>
    <published>2022-06-04T06:00:00.000Z</published>
    <updated>2022-06-18T18:51:16.570Z</updated>
    
    <content type="html"><![CDATA[<p>主键的作用是为了唯一标识出表中的一行数据，并且不能为空。</p><p>一、自增ID</p><p>自增ID作为主键的优缺点：</p><p>自增ID的优点</p><ol><li>ID值由数据库引擎产生，方便开发人员</li><li>ID值连续递增，提高数据库写入性能</li><li>整型类型，所需存储空间较小</li></ol><p>自增ID缺点</p><ol><li>ID值本身会暴露数据规模</li><li>ID值有序，容易暴露出其他ID值</li><li>ID值由数据库引擎自动生成，分布式环境不能做到全局唯一</li></ol><p>二、业务字段ID</p><p>业务字段ID作为主键可能产生的问题</p><ol><li>主键不能为空，某些业务字段可能非必需提供，或者因为隐私不能提供（例如电话号码、身份证号码）</li><li>业务字段ID可能遇到回收利用（例如会员号），导致在显示和统计上出错</li><li>业务字段ID有可能在一个表中多次出现（比如订单号）</li></ol><p>所以主键应该使用一个与业务无关的自增ID作为主键，但是也要接受自增ID的缺点。</p><p>三、自定义ID</p><p>主键除了使用自增ID，还可以自定义一个ID，例如：<br>使用：时间戳（13位）+去重整数（2位）+用户ID（后5位）作为主键ID</p><p>这个主键ID有20位，有序但不连续，趋势递增，有效的隐藏了数据规模，还能保证分布式环境下全局唯一。</p><p>随着数据规模的增加，自定义ID出现重复的概率也会增大，此时需要增加自定义ID的长度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主键的作用是为了唯一标识出表中的一行数据，并且不能为空。&lt;/p&gt;
&lt;p&gt;一、自增ID&lt;/p&gt;
&lt;p&gt;自增ID作为主键的优缺点：&lt;/p&gt;
&lt;p&gt;自增ID的优点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ID值由数据库引擎产生，方便开发人员&lt;/li&gt;
&lt;li&gt;ID值连续递增，提高数据库写入性能</summary>
      
    
    
    
    <category term="mysql" scheme="http://chenfeng.org/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://chenfeng.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>三个浏览内容的 Linux 命令功能对比</title>
    <link href="http://chenfeng.org/2021/07/24/linux_viewing_content/"/>
    <id>http://chenfeng.org/2021/07/24/linux_viewing_content/</id>
    <published>2021-07-24T02:00:00.000Z</published>
    <updated>2022-06-18T16:52:29.890Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#cat">cat</a></li><li><a href="#more">more</a></li><li><a href="#less">less</a></li><li><a href="#zong-jie">总结</a></li></ul><!-- tocstop --></div><p>cat,less,more 命令都有浏览内容、文件的功能对比。</p><h3><span id="cat">cat</span><a href="#cat" class="header-anchor">#</a></h3><p>cat（英文全拼：concatenate）命令用于连接文件并打印到标准输出设备上。</p><p>cat的几个用法：</p><ol><li>显示整个文件：cat filename</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat hello.html </span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">        &lt;head&gt;</span><br><span class="line">                &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">        &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">        &lt;body&gt;</span><br><span class="line"></span><br><span class="line">                &lt;p&gt; Hello World&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>接收从键盘的输入，创建一个新文件： cat &gt; filename</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat &gt; hello.sh</span><br><span class="line">echo &#x27;Hello World.&#x27;;</span><br><span class="line">^C</span><br></pre></td></tr></table></figure><p>换行后按 ctrl + c 退出即保存。</p><ol start="3"><li>显示行号</li></ol><ul><li>不对空行编号，cat -b filename</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat -b hello.html </span><br><span class="line">     1  &lt;html&gt;</span><br><span class="line"></span><br><span class="line">     2          &lt;head&gt;</span><br><span class="line">     3                  &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">     4          &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">     5          &lt;body&gt;</span><br><span class="line"></span><br><span class="line">     6                  &lt;p&gt; Hello World&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">     7          &lt;/body&gt;</span><br><span class="line">     8  &lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>对所有行顺序编号，cat -n filename</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat -n hello.html  </span><br><span class="line">     1  &lt;html&gt;</span><br><span class="line">     2</span><br><span class="line">     3          &lt;head&gt;</span><br><span class="line">     4                  &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">     5          &lt;/head&gt;</span><br><span class="line">     6</span><br><span class="line">     7          &lt;body&gt;</span><br><span class="line">     8</span><br><span class="line">     9                  &lt;p&gt; Hello World&lt;/p&gt;</span><br><span class="line">    10</span><br><span class="line">    11          &lt;/body&gt;</span><br><span class="line">    12  &lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>拼接文件： cat filename1 filename2 &gt; filename3</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat hello.html hello.sh &gt; hello.mix</span><br><span class="line">root@ubuntu:~# cat hello.mix </span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">        &lt;head&gt;</span><br><span class="line">                &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">        &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">        &lt;body&gt;</span><br><span class="line"></span><br><span class="line">                &lt;p&gt; Hello World&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">echo &#x27;Hello World.&#x27;;</span><br></pre></td></tr></table></figure><ol start="5"><li>cat的反向tac</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# tac hello.mix </span><br><span class="line">echo &#x27;Hello World.&#x27;;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">        &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">                &lt;p&gt; Hello World&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">        &lt;body&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/head&gt;</span><br><span class="line">                &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">        &lt;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br></pre></td></tr></table></figure><h3><span id="more">more</span><a href="#more" class="header-anchor">#</a></h3><p>more 命令，功能类似 cat ， cat 命令是将整个文件的内容显示在屏幕上；</p><p>more 命令则会把文件内容分页显示，底部显示浏览进度百分比，方便阅读。</p><ol><li><p>规定一页显示的行数： more -n filename</p></li><li><p>从第n行开始显示： more +n filename</p></li><li><p>翻页</p><ul><li>向下翻一页 按 space 键</li><li>向上翻一页  按 b(back) 键</li></ul></li><li><p>退出 </p><ul><li>按 q(quit)键</li><li>或者翻到最后一页自动退出</li></ul></li></ol><h3><span id="less">less</span><a href="#less" class="header-anchor">#</a></h3><p>less 工具是对文件或其它输出进行分页显示的工具，功能极其强大。</p><ol><li><p>显示行号： less -N filename</p></li><li><p>显示浏览百分比： less -m filename</p></li><li><p>翻页</p><ul><li>向下翻一页 按 space 键</li><li>向上翻一页  按 b(back) 键</li><li>向下翻半页 按 d(down) 键</li><li>向上翻半页 按 u(up) 键</li></ul></li><li><p>搜索</p><ul><li>向下搜索 按 &#x2F;加搜索内容，如 &#x2F;2020</li><li>向上搜索 按 ?加搜索内容，如 ?2020</li><li>按n(next)键搜索下一个</li></ul></li><li><p>退出 按q(quit)键</p></li></ol><h3><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor">#</a></h3><p>cat命令除了有浏览文件的功能，主要还是拼接文件的功能；</p><p>more 和 less 命令的功能类似，但是 less 命令的功能更加强大。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#cat&quot;&gt;cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#more&quot;&gt;more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#less&quot;&gt;less&lt;/a&gt;&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    <category term="linux" scheme="http://chenfeng.org/categories/linux/"/>
    
    
    <category term="linux" scheme="http://chenfeng.org/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>修改 MySQL 可打开文件数</title>
    <link href="http://chenfeng.org/2021/07/19/open_files_limit/"/>
    <id>http://chenfeng.org/2021/07/19/open_files_limit/</id>
    <published>2021-07-19T02:00:00.000Z</published>
    <updated>2022-06-18T17:29:45.562Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#ke-da-kai-wen-jian-shu-xian-zhi">可打开文件数限制</a></li><li><a href="#xiu-gai-mysql-open-files-limit-pei-zhi-de-zhi-de-liang-chong-fang-fa">修改 MySQL open_files_limit 配置的值的两种方法：</a></li></ul><!-- tocstop --></div><h3><span id="ke-da-kai-wen-jian-shu-xian-zhi">可打开文件数限制</span><a href="#ke-da-kai-wen-jian-shu-xian-zhi" class="header-anchor">#</a></h3><p>如果 MySQL 可打开的文件数值设置的过小，会出现 “too many open files” 的错误，这意味着一个进程已经打开了太多的文件（文件描述符），无法再打开新的文件了。</p><p>查看 MySQL 可打开文件数配置值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select @@open_files_limit;</span><br></pre></td></tr></table></figure><p>查看某一个进程(MySQL进程)已经打开的文件数 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll /proc/pid/fd|wc -l</span><br></pre></td></tr></table></figure><h3><span id="xiu-gai-mysql-open-files-limit-pei-zhi-de-zhi-de-liang-chong-fang-fa">修改 MySQL open_files_limit 配置的值的两种方法：</span><a href="#xiu-gai-mysql-open-files-limit-pei-zhi-de-zhi-de-liang-chong-fang-fa" class="header-anchor">#</a></h3><h4><span id="1-tong-guo-xiu-gai-mysql-xi-tong-bian-liang-max-connections-table-open-cache-huo-zhe-xiu-gai-xi-tong-ke-da-kai-zui-da-wen-jian-miao-shu-fu-de-shu-liang-lai-xiu-gai-open-files-limit-de-zhi">1.通过修改 MySQL 系统变量 max_connections 、 table_open_cache 或者 修改系统可打开最大文件描述符的数量 来修改 open_files_limit 的值</span><a href="#1-tong-guo-xiu-gai-mysql-xi-tong-bian-liang-max-connections-table-open-cache-huo-zhe-xiu-gai-xi-tong-ke-da-kai-zui-da-wen-jian-miao-shu-fu-de-shu-liang-lai-xiu-gai-open-files-limit-de-zhi" class="header-anchor">#</a></h4><p>MySQL 官方文档对这个字段的描述，<a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_open_files_limit">open_files_limit</a> 实际的取值会从下面四个值当中获取最大的。</p><ul><li>10 + max_connections + (table_open_cache * 2)</li><li>max_connections * 5</li><li>MySQL 8.0.19 and higher: The operating system limit.</li><li>Prior to MySQL 8.0.19:<ul><li>The operating system limit if that limit is positive but not Infinity.</li><li>If the operating system limit is Infinity: open_files_limit value if specified at startup, 5000 if not.</li></ul></li></ul><p>通过修改 MySQL 系统变量 max_connections 、 table_open_cache 或者 修改系统可打开最大文件描述符的数量 来修改 open_files_limit 的值。</p><h4><span id="2-xiu-gai-mysql-de-xi-tong-fu-wu-wen-jian">2. 修改 MySQL 的系统服务文件</span><a href="#2-xiu-gai-mysql-de-xi-tong-fu-wu-wen-jian" class="header-anchor">#</a></h4><p>通过查看 MySQL 状态命令 <code>service mysql status</code>，查看MySQL的系统服务文件(MySQL systemd service file)。</p><img src="http://tva4.sinaimg.cn/large/7d4c6366gy1gsb9iu6wrbj20wg087q3j.jpg" width="700" align="bottom"><p>在 <strong>mysql.service</strong> 文件的同级目录创建目录 <strong>mysql.service.d</strong>，并在目录里创建文件 <strong>limits.conf</strong> ，文件内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/lib/systemd/system/mysql.service.d/limits.conf</span></span><br><span class="line">[Service]</span><br><span class="line">LimitNOFILE=20480</span><br></pre></td></tr></table></figure><p>修改完后继续执行以下两条命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload    # 重新加载配置文件</span><br><span class="line">service mysql restart    # 重启mysqld服务，使配置生效</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;toc&quot;&gt;

&lt;!-- toc --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ke-da-kai-wen-jian-shu-xian-zhi&quot;&gt;可打开文件数限制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#xiu-gai-mysql-open-file</summary>
      
    
    
    
    <category term="mysql" scheme="http://chenfeng.org/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://chenfeng.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用JavaScript格式化数组字符串</title>
    <link href="http://chenfeng.org/2021/06/28/javascript-format/"/>
    <id>http://chenfeng.org/2021/06/28/javascript-format/</id>
    <published>2021-06-28T23:00:00.000Z</published>
    <updated>2022-06-18T18:27:04.378Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="ge-shi-hua-gui-ze">格式化规则</span><a href="#ge-shi-hua-gui-ze" class="header-anchor">#</a></h4><ol><li><code>[</code> 后面跟 <code>[</code> ，换行，增加缩进</li><li><code>,</code> 后面跟 <code>[</code> ，换行，增加缩进</li><li><code>]</code> 后面跟 <code>,</code> ，换行，缩进</li><li><code>]</code> 后面跟 <code>]</code> ，换行，减少缩进</li></ol><h4><span id="guan-yu-huan-xing">关于换行</span><a href="#guan-yu-huan-xing" class="header-anchor">#</a></h4><ol><li>HTML页面显示，使用 <code>&lt;br&gt;</code> 换行</li><li>输入框显示，使用 <code>\n</code> 换行</li></ol><h4><span id="ge-shi-hua-han-shu">格式化函数</span><a href="#ge-shi-hua-han-shu" class="header-anchor">#</a></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>json<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> formatArrString = <span class="keyword">function</span>(<span class="params">conf</span>) </span></span><br><span class="line"><span class="language-javascript">            &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> html = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> tmp = <span class="string">&quot;&quot;</span>;       <span class="comment">// 临时存储字符串</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> level = <span class="number">0</span>;      <span class="comment">// 缩进行数          </span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> num = <span class="number">4</span>;        <span class="comment">// 缩进空格数</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>;i&lt;conf.<span class="property">length</span>;i++)</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    tmp += conf.<span class="title function_">charAt</span>(i);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(conf.<span class="title function_">charAt</span>(i) == <span class="string">&#x27;[&#x27;</span> &amp;&amp; conf.<span class="title function_">charAt</span>(i+<span class="number">1</span>) == <span class="string">&#x27;[&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        html += tmp;</span></span><br><span class="line"><span class="language-javascript">                        html += <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        level += num;</span></span><br><span class="line"><span class="language-javascript">                        tmp = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;level;j++)</span></span><br><span class="line"><span class="language-javascript">                            html += <span class="string">&quot;\xa0&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(conf.<span class="title function_">charAt</span>(i) == <span class="string">&#x27;,&#x27;</span> &amp;&amp; conf.<span class="title function_">charAt</span>(i+<span class="number">1</span>) == <span class="string">&#x27;[&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        html += tmp;</span></span><br><span class="line"><span class="language-javascript">                        html += <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        level += num;</span></span><br><span class="line"><span class="language-javascript">                        tmp = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;level;j++)</span></span><br><span class="line"><span class="language-javascript">                            html += <span class="string">&quot;\xa0&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(conf.<span class="title function_">charAt</span>(i) == <span class="string">&#x27;]&#x27;</span> &amp;&amp; conf.<span class="title function_">charAt</span>(i+<span class="number">1</span>) == <span class="string">&#x27;,&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        html += tmp;</span></span><br><span class="line"><span class="language-javascript">                        tmp = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        level -= num;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(conf.<span class="title function_">charAt</span>(i) == <span class="string">&#x27;]&#x27;</span> &amp;&amp; conf.<span class="title function_">charAt</span>(i+<span class="number">1</span>) == <span class="string">&#x27;]&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    &#123;</span></span><br><span class="line"><span class="language-javascript">                        html += tmp;</span></span><br><span class="line"><span class="language-javascript">                        tmp = <span class="string">&quot;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        html += <span class="string">&quot;&lt;br&gt;&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        level -= num;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">0</span>;j&lt;level;j++)</span></span><br><span class="line"><span class="language-javascript">                            html += <span class="string">&quot;\xa0&quot;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                html += tmp;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> html;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> conf = <span class="string">&quot;[[667,3,[[99999999999,10900,[[99999999999,20000000,1000],[20000000,10000000,900],[10000000,5000000,800],[5000000,1000000,700]]],[10900,10600,[[99999999999,20000000,900],[20000000,10000000,800],[10000000,5000000,700],[5000000,1000000,600]]],[10600,10300,[[99999999999,20000000,800],[20000000,10000000,700],[10000000,5000000,600],[5000000,1000000,500]]],[10300,10000,[[99999999999,20000000,700],[20000000,10000000,600],[10000000,5000000,500],[5000000,1000000,400]]],[9000,7000,[[-99999999999,-20000000,-250],[-20000000,-10000000,-200],[-10000000,-5000000,-200],[-5000000,-1000000,-200]]],[7000,0,[[-99999999999,-20000000,-300],[-20000000,-10000000,-200],[-10000000,-5000000,-200],[-5000000,-1000000,-200]]]]],[2405,3,[[99999999999,10900,[[99999999999,20000000,1000],[20000000,10000000,900],[10000000,5000000,800],[5000000,1000000,700]]],[10900,10600,[[99999999999,20000000,900],[20000000,10000000,800],[10000000,5000000,700],[5000000,1000000,600]]],[10600,10300,[[99999999999,20000000,800],[20000000,10000000,700],[10000000,5000000,600],[5000000,1000000,500]]],[10300,10000,[[99999999999,20000000,700],[20000000,10000000,600],[10000000,5000000,500],[5000000,1000000,400]]],[9000,7000,[[-99999999999,-20000000,-250],[-20000000,-10000000,-200],[-10000000,-5000000,-200],[-5000000,-1000000,-200]]],[7000,0,[[-99999999999,-20000000,-300],[-20000000,-10000000,-200],[-10000000,-5000000,-200],[-5000000,-1000000,-200]]]]]]&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="title function_">formatArrString</span>(conf));</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="ge-shi-hua-xiao-guo">格式化效果</span><a href="#ge-shi-hua-xiao-guo" class="header-anchor">#</a></h4><ol><li>使用 <a href="https://www.bejson.com/">bejson</a> 格式化出来的效果</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    [667, 3, [</span><br><span class="line">        [99999999999, 10900, [</span><br><span class="line">            [99999999999, 20000000, 1000],</span><br><span class="line">            [20000000, 10000000, 900],</span><br><span class="line">            [10000000, 5000000, 800],</span><br><span class="line">            [5000000, 1000000, 700]</span><br><span class="line">        ]],</span><br><span class="line">        [10900, 10600, [</span><br><span class="line">            [99999999999, 20000000, 900],</span><br><span class="line">            [20000000, 10000000, 800],</span><br><span class="line">            [10000000, 5000000, 700],</span><br><span class="line">            [5000000, 1000000, 600]</span><br><span class="line">        ]],</span><br><span class="line">        [10600, 10300, [</span><br><span class="line">            [99999999999, 20000000, 800],</span><br><span class="line">            [20000000, 10000000, 700],</span><br><span class="line">            [10000000, 5000000, 600],</span><br><span class="line">            [5000000, 1000000, 500]</span><br><span class="line">        ]],</span><br><span class="line">        [10300, 10000, [</span><br><span class="line">            [99999999999, 20000000, 700],</span><br><span class="line">            [20000000, 10000000, 600],</span><br><span class="line">            [10000000, 5000000, 500],</span><br><span class="line">            [5000000, 1000000, 400]</span><br><span class="line">        ]],</span><br><span class="line">        [9000, 7000, [</span><br><span class="line">            [-99999999999, -20000000, -250],</span><br><span class="line">            [-20000000, -10000000, -200],</span><br><span class="line">            [-10000000, -5000000, -200],</span><br><span class="line">            [-5000000, -1000000, -200]</span><br><span class="line">        ]],</span><br><span class="line">        [7000, 0, [</span><br><span class="line">            [-99999999999, -20000000, -300],</span><br><span class="line">            [-20000000, -10000000, -200],</span><br><span class="line">            [-10000000, -5000000, -200],</span><br><span class="line">            [-5000000, -1000000, -200]</span><br><span class="line">        ]]</span><br><span class="line">    ]],</span><br><span class="line">    [2405, 3, [</span><br><span class="line">        [99999999999, 10900, [</span><br><span class="line">            [99999999999, 20000000, 1000],</span><br><span class="line">            [20000000, 10000000, 900],</span><br><span class="line">            [10000000, 5000000, 800],</span><br><span class="line">            [5000000, 1000000, 700]</span><br><span class="line">        ]],</span><br><span class="line">        [10900, 10600, [</span><br><span class="line">            [99999999999, 20000000, 900],</span><br><span class="line">            [20000000, 10000000, 800],</span><br><span class="line">            [10000000, 5000000, 700],</span><br><span class="line">            [5000000, 1000000, 600]</span><br><span class="line">        ]],</span><br><span class="line">        [10600, 10300, [</span><br><span class="line">            [99999999999, 20000000, 800],</span><br><span class="line">            [20000000, 10000000, 700],</span><br><span class="line">            [10000000, 5000000, 600],</span><br><span class="line">            [5000000, 1000000, 500]</span><br><span class="line">        ]],</span><br><span class="line">        [10300, 10000, [</span><br><span class="line">            [99999999999, 20000000, 700],</span><br><span class="line">            [20000000, 10000000, 600],</span><br><span class="line">            [10000000, 5000000, 500],</span><br><span class="line">            [5000000, 1000000, 400]</span><br><span class="line">        ]],</span><br><span class="line">        [9000, 7000, [</span><br><span class="line">            [-99999999999, -20000000, -250],</span><br><span class="line">            [-20000000, -10000000, -200],</span><br><span class="line">            [-10000000, -5000000, -200],</span><br><span class="line">            [-5000000, -1000000, -200]</span><br><span class="line">        ]],</span><br><span class="line">        [7000, 0, [</span><br><span class="line">            [-99999999999, -20000000, -300],</span><br><span class="line">            [-20000000, -10000000, -200],</span><br><span class="line">            [-10000000, -5000000, -200],</span><br><span class="line">            [-5000000, -1000000, -200]</span><br><span class="line">        ]]</span><br><span class="line">    ]]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>2.使用 formatArrString 函数格式化出来的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    [667,3,</span><br><span class="line">        [</span><br><span class="line">            [99999999999,10900,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,1000],</span><br><span class="line">                    [20000000,10000000,900],</span><br><span class="line">                    [10000000,5000000,800],</span><br><span class="line">                    [5000000,1000000,700]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10900,10600,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,900],</span><br><span class="line">                    [20000000,10000000,800],</span><br><span class="line">                    [10000000,5000000,700],</span><br><span class="line">                    [5000000,1000000,600]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10600,10300,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,800],</span><br><span class="line">                    [20000000,10000000,700],</span><br><span class="line">                    [10000000,5000000,600],</span><br><span class="line">                    [5000000,1000000,500]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10300,10000,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,700],</span><br><span class="line">                    [20000000,10000000,600],</span><br><span class="line">                    [10000000,5000000,500],</span><br><span class="line">                    [5000000,1000000,400]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [9000,7000,</span><br><span class="line">                [</span><br><span class="line">                    [-99999999999,-20000000,-250],</span><br><span class="line">                    [-20000000,-10000000,-200],</span><br><span class="line">                    [-10000000,-5000000,-200],</span><br><span class="line">                    [-5000000,-1000000,-200]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [7000,0,</span><br><span class="line">                [</span><br><span class="line">                    [-99999999999,-20000000,-300],</span><br><span class="line">                    [-20000000,-10000000,-200],</span><br><span class="line">                    [-10000000,-5000000,-200],</span><br><span class="line">                    [-5000000,-1000000,-200]</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ],</span><br><span class="line">    [2405,3,</span><br><span class="line">        [</span><br><span class="line">            [99999999999,10900,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,1000],</span><br><span class="line">                    [20000000,10000000,900],</span><br><span class="line">                    [10000000,5000000,800],</span><br><span class="line">                    [5000000,1000000,700]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10900,10600,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,900],</span><br><span class="line">                    [20000000,10000000,800],</span><br><span class="line">                    [10000000,5000000,700],</span><br><span class="line">                    [5000000,1000000,600]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10600,10300,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,800],</span><br><span class="line">                    [20000000,10000000,700],</span><br><span class="line">                    [10000000,5000000,600],</span><br><span class="line">                    [5000000,1000000,500]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [10300,10000,</span><br><span class="line">                [</span><br><span class="line">                    [99999999999,20000000,700],</span><br><span class="line">                    [20000000,10000000,600],</span><br><span class="line">                    [10000000,5000000,500],</span><br><span class="line">                    [5000000,1000000,400]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [9000,7000,</span><br><span class="line">                [</span><br><span class="line">                    [-99999999999,-20000000,-250],</span><br><span class="line">                    [-20000000,-10000000,-200],</span><br><span class="line">                    [-10000000,-5000000,-200],</span><br><span class="line">                    [-5000000,-1000000,-200]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            [7000,0,</span><br><span class="line">                [</span><br><span class="line">                    [-99999999999,-20000000,-300],</span><br><span class="line">                    [-20000000,-10000000,-200],</span><br><span class="line">                    [-10000000,-5000000,-200],</span><br><span class="line">                    [-5000000,-1000000,-200]</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;ge-shi-hua-gui-ze&quot;&gt;格式化规则&lt;/span&gt;&lt;a href=&quot;#ge-shi-hua-gui-ze&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;[&lt;/code&gt; 后面跟 &lt;code&gt;</summary>
      
    
    
    
    
    <category term="javascript" scheme="http://chenfeng.org/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>迪拜跳伞记</title>
    <link href="http://chenfeng.org/2021/05/22/skydive-dubai/"/>
    <id>http://chenfeng.org/2021/05/22/skydive-dubai/</id>
    <published>2021-05-22T10:00:00.000Z</published>
    <updated>2022-06-18T17:55:49.416Z</updated>
    
    <content type="html"><![CDATA[<p>来迪拜半年有余了，因为疫情的关系，很少出门。</p><p>最近终于打了第二针疫苗，于是想要出去浪的心情逐渐暴露出来了。</p><p>一直听闻迪拜跳伞很有名，来迪拜不跳伞，就相当于白来了。</p><p>于是就发起了个跳伞的活动，没想到平时叫的最大声的人都不去，最后只有一个小伙伴也想去玩，于是就组队成功了。</p><h4><span id="bao-ming">报名</span><a href="#bao-ming" class="header-anchor">#</a></h4><p>确定人数后就可以去官方网站报名了，我们选择的是棕榈岛双人跳伞，总的费用大约是2400(AED)。</p><p>报名的表单需要提供个人信息（包括：邮箱，电话，ID或者护照，等等），提交信息后需要先交999(AED)作为定金，并且说明了，如果最后没有去跳伞，定金不给退还。</p><p>报名成功后还要签署一份免责声明，填写保险的信息。</p><p>填写到这一步，心里多少有点慌的，但是理性的想一下，但凡有点危险的娱乐活动，商家都会要求消费者签署这样一份免责声明，所以就继续填写提交了。</p><p>最后官方发送一份邮件过来，确认邮箱地址的正确性，邮箱地址用于后期收发照片和视频。</p><p>最终跳伞的时间确定在5月22日，周六，下午一点半（这个时间是到达签到的时间）。</p><p>因为签署了免责声明，购买的意外险的原因，报名后的几天总是想起这个事情，一想到就觉得恐惧和犹豫。</p><p>每当感到恐惧的时候就去油管上看一下官方发布的跳伞视频，看一下那些勇士无所畏惧的表情，纵身一跃，体验重力加速度的快感，在空中自由飞翔，在棕榈岛上空遨游。</p><p>通过不断的看视频，不断的给自己做心理建设，让自己相信教练团队是专业的，跳伞设备是安全有效的，一项惊险刺激极限运动在等着我。</p><h4><span id="qian-dao">签到</span><a href="#qian-dao" class="header-anchor">#</a></h4><p>5月22日当天，午饭后就开车前往目的地。<br>因为我们住的地方距离目的地不远，所以其实我们是踩着点出发的。</p><p>在快要到达目的地的时候，看到空中飘着几片东西，像风筝。<br>随着距离靠近，就能清晰的看出其实是降落伞。有的是单人的，有的是双人的，在空中左旋右摆，缓缓降落。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt29zr3rwj30yi0jiq5u.jpg" width="700" align="bottom"><p>停好车，直接进入大厅，找柜台的工作人员签到。<br>工作人员给我测一下体重，这个在官网上有说明的，体重和BMI都有要求，其实这个不用太在意，只要不是长得太胖都不会有问题。</p><p>然后支付剩余的费用，因为报名的时候看到的价格是2400左右，但是现场只支付了1080，加上999定金，总的费用没有对上，但是因为沟通有点问题，所以也懒得详细问了。</p><p>给钱后收到一张小票，小票上有姓名和排队的号码。<br>这个小票是工作人员确认身份的凭证，所以要保管好。</p><p>接着上二楼休息，等待。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt2v8448gj31400u0u0y.jpg" width="700" align="bottom"><center>等待</center><p>等了10来分钟后，有个脏辫大叔过来叫名字，确认身份后就带我们去一个会议室，看一会官方的宣传视频，主要是介绍跳伞的的过程和一些注意事项，中英双字幕，看起来无障碍。</p><p>跟我们一起跳伞的还有一对情侣和一个略彪悍的白人男子，他声称自己已经跳了8次了，脏辫大叔立刻表示出敬意。</p><p>接着去到一楼寄存随身物品，等待教练，等待的过程中可以看一下墙上的屏幕，找到自己的名字，可以看到自己的出发倒计时。</p><p>大约过了二十分钟，教练过来叫名字，领着我去穿戴跳伞装备。<br>接着指着提示板，教我做几个跳伞的动作，提示板上用中文解释了每个动作，做起来也很容易。</p><p>接着有个摄影的小哥过来给我拍照，然后例行采访一下。这个摄影小哥就是我的专属摄像，待会会跟着我们一起跳下来，在打开降落伞之前全程拍照。</p><h4><span id="tiao-san">跳伞</span><a href="#tiao-san" class="header-anchor">#</a></h4><p>所有人员准备就绪后就开始出发了，一辆大卡车载着我们一行人去到1000米外的停机坪，每个人配有一个跳伞教练和一个摄影，总共15人，一个小飞机塞得满满的。</p><p>由于我上大卡车的时候坐到了最里面，所以下车的时候也走在了后面，自然就是最迟上飞机的人，我就坐在飞机拉闸门的门口。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt180x99fj31900u0e86.jpg" width="700" align="bottom"><center>上飞机</center><p>五月的迪拜，室外温度直逼40℃，机舱里闷热又拥挤，我只能把脸凑近背后那个很小的冷气出风口，尽量缓解一下闷热。</p><p>飞机缓慢爬升，透过拉闸门可以看到湛蓝的海水，游艇，棕榈岛上的别墅区，海边的高楼，远处正在建设的建筑，更远处的沙漠，从繁华到荒凉，一览无余。</p><p>飞机爬到五千英尺（约1500m）的时候，教练员们调整坐姿，集体向飞机尾部靠拢，使飞机重心后移，此时飞机的拉闸门被打开，清凉的风瞬间灌进机舱，一扫闷热，让人神清气爽。</p><p>飞机继续在向上爬升。</p><p>拉闸门距离我仅一步，透过机舱门，俯瞰湛蓝的海平面，浅黄色的陆地和灰蒙蒙的远方，如果迪拜有底色，我觉得就是荒凉色。</p><p>我右手紧紧握住门把手，左手按着教练的膝盖，望着窗外出神了，教练不断的对我喊：Relax…Relax…<br>，按着我的肩膀给我放松。我假装镇定的，用手指在他的膝盖上随意的打拍子。</p><p>飞机在一万三千英尺（约4000m）的地方停止爬升，水平慢速飞行。教练示意我坐到他大腿上，跟他绑定到一起，给我戴上风镜，然后又跟我确认了一遍跳伞的动作，这就准备好了。</p><p>一起来的小伙伴正对着机舱门，他率先跳下，我接着他后面。</p><p>终于轮到我了，教练推着我，我半蹲着，慢慢的挪到机舱门口。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt1aabrxjj31900u0u12.jpg" width="700" align="bottom"><center>准备了</center><p>眼前一幕震撼到我了，蓝天、白云、海洋、城市，大自然的一切都很大、很高、很远，甚至没有边界，而我等如尘埃一般在空中飘着，我们太渺小了。</p><p>寒风呼呼呼的扑面而来，我感觉到凉，甚至有点冷了；机舱里开始躁动起来，嘶吼的声音夹杂着肾上腺素，令人振奋。</p><p>此时我脑子已经空白了，没有恐惧，没有紧张，什么想法都没有，只有服从教练的指示。</p><p>此时摄影小哥给我做了个手势，提示我，要看着他（的镜头）。<br>教练提示我握紧肩带，接着一点示意都没有，一个翻身就把我带出去了。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt1dn48wyj31900u0kjp.jpg" width="700" align="bottom"><center>跳了</center><p>我感觉在空中翻转了几圈，然后头朝下，向下俯冲。</p><p>我感觉到我被一块巨石压着，不是很沉，但就是顶着我，我感觉到越来越快。</p><p>我感觉风很猛烈，鼻子呼吸不了，可能是太紧张了，所以只能通过嘴大口呼气。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt1fsy63xj31900u0x6s.jpg" width="700" align="bottom"><center>俯冲</center><p>我感觉到我脸上的肉发生了位移，我的嘴被风吹得合不上，表情已经不能有效管理了。</p><p>我双手紧紧的握着肩带，我感觉双手像被固定了一样，撑不开手指。</p><p>教练拍了拍我的肩膀，示意我可以放开双手了。</p><p>我如鹰一样张开双翅，我感觉我在飞，这种感觉真实太爽了。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt1icwi3xj31900u01l1.jpg" width="700" align="bottom"><center>飞了</center><p>教练踢了踢我的脚，示意我把脚翘得高一点。我调整了一下姿势，把身体凹成一个香蕉那样，继续坠落。</p><p>摄影小哥如蜘蛛侠一般，随意调整速度。忽远忽近，忽上忽下，时而跟我们招手，时而围着我们旋转，我知道他在帮我拍照录视频，所以也很配合的做一些动作。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt1xl1tatj31900u0x6u.jpg" width="700" align="bottom"><p>根据官方网站的介绍，我此刻正在以120英里每小时（约200km&#x2F;h）的速度在下落，这太不可思议了。</p><p>自由落体一段时间后，教练跟摄影小哥比了个手势，摄影小哥就飞走了，随后教练打开了降落伞。巨大的拉力拉住了我，我感觉被往上拉回去一般，大腿感觉到被勒住，勒紧了，耳朵瞬间感觉到耳鸣。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt213r8wbj31900u0x6t.jpg" width="700" align="bottom"><center>开伞的一瞬间</center><p>不过，当时身体的这些不适感都不重要，不在乎了，因为我刚刚经历了极度惊险，极度刺激的坠落，我感觉情绪已经拉满了。</p><p>甚至出现某种幻觉，我感觉世界就只有我一个人，我的周围一个人也没有，地面、海面都太遥远了，所有的东西都很渺小。</p><p>我完全放开了的吼叫，尖叫，乱叫，直到感觉够了，没力气了，才停止下来。</p><p>我开始意识到我在降落，教练控制着降落伞在空中一会向左飞，一会向右飞，一会儿直线下落，偶尔出现得失重感使我开始紧张起来，我又一次紧紧的握住肩带。</p><p>在快要着陆的时候，教练提示我戴好口罩，但是我感觉到手指已经没力了，只能勉强的把口罩扣好，暂时拉到下巴下面，等待着陆后再做调整。</p><p>着陆的动作是跳伞的最后一个动作，只要把双脚抬高，让教练控制着陆地点就好。</p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gqt243gnb1j31900u0u14.jpg" width="700" align="bottom"><center>着陆的一瞬间</center><p>摄影小哥提示我照片和视频会在一天内会通过电子邮件发送给我，随后就回大厅休息了。</p><p>回想刚刚过去的十几分钟，我感觉耗尽了我这一天的全部能量，我感觉到疲劳和睡意，我需要缓一下。</p><p>在大厅的二楼找了个地方坐下来，喝水缓解一下耳鸣，吃点东西恢复一下体力。</p><p>开车回家的一路上，脑子感觉不会思考了，想的都是刚刚发生的事情，所以开的很慢，幸好是周末，路上的车也不多。</p><h4><span id="gan-shou">感受</span><a href="#gan-shou" class="header-anchor">#</a></h4><p>回到家后什么都不想做了，不想喝水，没有食欲，不想刷手机，彷佛得到了巨大的满足感。</p><p>脑子像是被刷过似的，回忆尽是与跳伞有关的画面。<br>那一分钟的极速坠落像一部漫长的电影，在脑海里循环播放；那一分钟彷佛跑了一场马拉松，身心俱疲，但是相当有成就感。</p><p>这种感觉，很难通过文字描述清楚，别人也很难通过文字体会得到，所以我觉得，有机会有条件的话，还是应该亲自去体验一下。</p><p>只有体验过刺激的才能明白什么是刺激，只有吃过好吃的才能明白什么是好吃，只有自己体验过了，才能理解别人的感受。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;来迪拜半年有余了，因为疫情的关系，很少出门。&lt;/p&gt;
&lt;p&gt;最近终于打了第二针疫苗，于是想要出去浪的心情逐渐暴露出来了。&lt;/p&gt;
&lt;p&gt;一直听闻迪拜跳伞很有名，来迪拜不跳伞，就相当于白来了。&lt;/p&gt;
&lt;p&gt;于是就发起了个跳伞的活动，没想到平时叫的最大声的人都不去，最后只有一</summary>
      
    
    
    
    <category term="personal" scheme="http://chenfeng.org/categories/personal/"/>
    
    
    <category term="游玩" scheme="http://chenfeng.org/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>Telegram Bot</title>
    <link href="http://chenfeng.org/2021/04/06/telegram/"/>
    <id>http://chenfeng.org/2021/04/06/telegram/</id>
    <published>2021-04-06T16:00:00.000Z</published>
    <updated>2022-06-18T19:00:33.677Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="chuang-jian-bot">创建 Bot</span><a href="#chuang-jian-bot" class="header-anchor">#</a></h4><p>查找官方账号 BotFather ，带有头像，并且账号名右边带后蓝色标志的就是。</p><p>点击 &#x2F;start 指令后，显示有常用的指令和使用说明。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqbjyahzj30u00vy0y6.jpg" width="700" align="bottom"></p><center>BotFather</center><ol><li>点击 &#x2F;newbot 指令，开始创建 Bot</li><li>首先输入 Bot 的名字（不会做唯一性检测）</li><li>接着输入 Bot 的账户名（做唯一性检测），账户名必须以 bot 作为后缀</li><li>最后会返回 Bot 的token，token可以看作是 Bot 的唯一ID，不可泄漏<img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqblzj00j30u00vyn3y.jpg" width="700" align="bottom"><center>创建Bot</center></li></ol><h4><span id="bot-fa-xiao-xi-dao-user">Bot 发消息到 User</span><a href="#bot-fa-xiao-xi-dao-user" class="header-anchor">#</a></h4><p>查找刚刚创建的Bot，账号 testRebot_Bot ,点击 &#x2F;start 指令。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqdetna7j30u00vydh6.jpg" width="700" align="bottom"></p><center>testRebot_Bot</center><p>Bot 发消息到 User ，使用 API ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot&lt;token&gt;/sendMessage?chat_id=&lt;user_id&gt;&amp;text=&lt;message&gt;</span><br></pre></td></tr></table></figure><p>尖括号里的三个参数分别是 Bot 的token，User 的 id 和发送的消息。</p><p>查找官方账号 userinfobot ，点击 &#x2F;start 指令，就会返回 User 的信息，其中就包括了 User 的 id。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqdg4b5dj30u00vydhg.jpg" width="700" align="bottom"></p><center>石碑</center><p>通过浏览器访问接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot1715369074:AAHGwoVNoWDAT8YMmuwARH4LMIJO5oGduJg/sendMessage?chat_id=&lt;user_id&gt;&amp;text=Hello World!</span><br></pre></td></tr></table></figure><p>可得到成功的返回结果。通过 Telegram 可知 ，确实收到了 Bot 发来的测试消息。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqfehhf0j30u00vy0ug.jpg" width="700" align="bottom"></p><center>石碑</center><h4><span id="bot-fa-xiao-xi-dao-group">Bot 发消息到 Group</span><a href="#bot-fa-xiao-xi-dao-group" class="header-anchor">#</a></h4><p>与发送消息到 User 的 API 一样，唯一的区别是参数 chat_id 要换成群组id。</p><p>首先把 Bot 拉到一个群组里面，发送一条消息，激活群组。</p><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqg4f0r6j30u00yv0u6.jpg" width="700" align="bottom"><center>群组</center><p>通过API：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot&lt;token&gt;/getUpdates</span><br></pre></td></tr></table></figure><p>可以查看 Bot 所在群组的群组id。</p><p>通过浏览器访问接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot1715369074:AAHGwoVNoWDAT8YMmuwARH4LMIJO5oGduJg/getUpdates</span><br></pre></td></tr></table></figure><p>可得群组id为：-564051528。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqg6mrpmj30v20e2gmu.jpg" width="700" align="bottom"></p><center>群组id</center><p>通过浏览器访问接口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.telegram.org/bot1715369074:AAHGwoVNoWDAT8YMmuwARH4LMIJO5oGduJg/sendMessage?chat_id=-564051528&amp;text=Hello Group!</span><br></pre></td></tr></table></figure><p>可得到成功的返回结果。通过 Telegram 可知 ，群组收到了 Bot 发来的测试消息。</p><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqgu9ftij30u00yvdhh.jpg" width="700" align="bottom"><center>群组</center><h4><span id="shan-chu-bot">删除 Bot</span><a href="#shan-chu-bot" class="header-anchor">#</a></h4><p>通过 &#x2F;mybots 指令查看我的 Bot，先是一个或者多个。</p><p>点击 delete Bot 指令，经过几次重复确认后，可以删除没用的 Bot。<br><img src="https://tva1.sinaimg.cn/large/008eGmZEgy1gpaqhpon7pj30vm0j20vr.jpg" width="700" align="bottom"></p><center>删除Bot</center>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;chuang-jian-bot&quot;&gt;创建 Bot&lt;/span&gt;&lt;a href=&quot;#chuang-jian-bot&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;查找官方账号 BotFather ，带有头像，并且账号名右边带后蓝色</summary>
      
    
    
    
    <category term="telegram" scheme="http://chenfeng.org/categories/telegram/"/>
    
    
    <category term="telegram" scheme="http://chenfeng.org/tags/telegram/"/>
    
  </entry>
  
  <entry>
    <title>MySQL常用日期和时间函数</title>
    <link href="http://chenfeng.org/2021/03/14/mysql-date-time/"/>
    <id>http://chenfeng.org/2021/03/14/mysql-date-time/</id>
    <published>2021-03-14T08:00:00.000Z</published>
    <updated>2022-06-18T17:54:33.430Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="ri-qi-x2f-shi-jian-biao-shi">日期&#x2F;时间表示</span><a href="#ri-qi-x2f-shi-jian-biao-shi" class="header-anchor">#</a></h4><ol><li><p>返回当前日期时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT NOW();   ## 同CURRENT_TIMESTAMP(),返回一个 datetime 表达式</span><br><span class="line">&lt;.  2021-03-14 15:37:16</span><br></pre></td></tr></table></figure></li><li><p>返回当前日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT DATE(NOW());  ## 同CURRENT_DATE() 和 CURDATE()</span><br><span class="line">&lt;.  2021-03-14</span><br></pre></td></tr></table></figure></li><li><p>返回当前时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT TIME(NOW());  ## 同CURRENT_TIME() 和 CURTIME()</span><br><span class="line">&lt;.  15:41:19</span><br></pre></td></tr></table></figure></li><li><p>单独返回年&#x2F;月&#x2F;日&#x2F;时&#x2F;分&#x2F;秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT YEAR(NOW());</span><br><span class="line">&lt;.  2021</span><br><span class="line">&gt;   SELECT MONTH(NOW());</span><br><span class="line">&lt;.  3</span><br><span class="line">&gt;   SELECT DAY(NOW());</span><br><span class="line">&lt;.  14</span><br><span class="line">&gt;   SELECT HOUR(NOW());</span><br><span class="line">&lt;.  15</span><br><span class="line">&gt;   SELECT MINUTE(NOW());</span><br><span class="line">&lt;.  49</span><br><span class="line">&gt;   SELECT SECOND(NOW());</span><br><span class="line">&lt;.  43</span><br></pre></td></tr></table></figure></li><li><p>另一种方式单独返回年&#x2F;月&#x2F;日&#x2F;时&#x2F;分&#x2F;秒</p></li></ol><p>使用 <code>EXTRACT(unit FROM date)</code> 函数，<code>unit</code> 为要返回值类型，<code>date</code> 为日期时间表达式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT EXTRACT(YEAR FROM NOW());</span><br><span class="line">&lt;.  2021</span><br></pre></td></tr></table></figure><blockquote><p>unit包括：YEAR,MONTH,DAY,HOUR,MINUTE,SECOND,MICROSECOND等等。</p></blockquote><p>使用 <code>DATE_FORMAT(date,format)</code> 函数，<code>date</code> 为日期时间表达式，<code>format</code> 为要返回的日期格式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT DATE_FORMAT(NOW(),&quot;%Y&quot;);</span><br><span class="line">&lt;.  2021</span><br></pre></td></tr></table></figure><p>常用的日期时间格式有：</p><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>%Y</td><td>4位数字年份</td></tr><tr><td>%m</td><td>2位数字月份 (00 to 12)</td></tr><tr><td>%d</td><td>2位数字日期 (01 to 31)</td></tr><tr><td>%H</td><td>小时 (00 to 23)</td></tr><tr><td>%i</td><td>分钟 (00 to 59)</td></tr><tr><td>%s</td><td>秒钟 (00 to 59)</td></tr><tr><td>%f</td><td>毫秒 (000000 to 999999)</td></tr></tbody></table><p>更多的日期时间格式查看 <a href="https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_date-format">Date and Time Functions</a> 文档。</p><h4><span id="ri-qi-x2f-shi-jian-ji-suan">日期&#x2F;时间计算</span><a href="#ri-qi-x2f-shi-jian-ji-suan" class="header-anchor">#</a></h4><ol><li><p>加 x 年&#x2F;月&#x2F;日&#x2F;时&#x2F;分&#x2F;秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT NOW();</span><br><span class="line">&lt;.  2021-03-14 18:21:18</span><br><span class="line">&gt;   SELECT DATE_ADD(NOW(),INTERVAL 1 HOUR);</span><br><span class="line">&lt;.  2021-03-14 19:21:18</span><br></pre></td></tr></table></figure></li><li><p>减 x 年&#x2F;月&#x2F;日&#x2F;时&#x2F;分&#x2F;秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT NOW();</span><br><span class="line">&lt;.  2021-03-14 18:23:07</span><br><span class="line">&gt;   SELECT DATE_SUB(NOW(),INTERVAL 1 DAY);</span><br><span class="line">&lt;.  2021-03-13 18:23:07</span><br></pre></td></tr></table></figure></li><li><p>计算两个日期时间之差</p></li></ol><p>使用 <code>DATEDIFF(date1,date2)</code> 函数计算两个日期相差几天。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT DATEDIFF(DATE_ADD(NOW(),  INTERVAL 1 DAY),CURDATE());</span><br><span class="line">&lt;.  1</span><br></pre></td></tr></table></figure><p>使用 <code>TIMEDIFF(time1,time2)</code> 函数计算两个时间相差多少小时多少分钟多少秒钟。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT TIMEDIFF(DATE_ADD(CURTIME(),INTERVAL 1 HOUR),CURTIME());</span><br><span class="line">&lt;.  01:00:00</span><br></pre></td></tr></table></figure><h4><span id="ri-qi-shi-jian-yu-unix-shi-jian-chuo-hu-xiang-zhuan-huan">日期时间与unix时间戳互相转换</span><a href="#ri-qi-shi-jian-yu-unix-shi-jian-chuo-hu-xiang-zhuan-huan" class="header-anchor">#</a></h4><ol><li><p>日期时间 转 时间戳<br>函数 <code>UNIX_TIMESTAMP(datetime)</code> 带一个日期时间表达式参数，当不带参数时，相当于 <code>datetime=now()</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT UNIX_TIMESTAMP();</span><br><span class="line">&lt;.  1615721103</span><br><span class="line">&gt;   SELECT UNIX_TIMESTAMP(DATE_ADD(NOW(),INTERVAL 1 DAY));      # 返回明天的时间戳</span><br><span class="line">&lt;.  1615807716</span><br></pre></td></tr></table></figure></li><li><p>时间戳 转 日期时间<br>函数 <code>FROM_UNIXTIME(unix_timestamp,format)</code> 有两个参数， <code>unix_timestamp</code> 参数必须，表示时间戳，<code>format</code> 参数可选，表示日期时间格式，当 <code>format</code> 为空时，表示返回 <code>&quot;%Y-%m-%d %H:%i:%s&quot;</code> 格式的日期时间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;   SELECT FROM_UNIXTIME(1615807716);</span><br><span class="line">&lt;.  2021-03-15 19:28:36</span><br><span class="line">&gt;   SELECT FROM_UNIXTIME(1615807716,&quot;%Y-%m-%d&quot;);</span><br><span class="line">&lt;.  2021-03-15</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;ri-qi-x2f-shi-jian-biao-shi&quot;&gt;日期&amp;#x2F;时间表示&lt;/span&gt;&lt;a href=&quot;#ri-qi-x2f-shi-jian-biao-shi&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;&lt;ol&gt;
&lt;l</summary>
      
    
    
    
    <category term="mysql" scheme="http://chenfeng.org/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://chenfeng.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>使用PHP和SHELL脚本删除日志</title>
    <link href="http://chenfeng.org/2021/03/12/delete-log/"/>
    <id>http://chenfeng.org/2021/03/12/delete-log/</id>
    <published>2021-03-12T11:00:00.000Z</published>
    <updated>2022-07-10T02:53:27.807Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="si-lu">思路</span><a href="#si-lu" class="header-anchor">#</a></h4><p>一般来说，日志文件都是按照日期来命名的，例如这样: <code>21_03_01.log</code>。</p><p>每一个日志文件只记录当天某个功能的日志信息，这种做法方便于定为错误。</p><p>通过日志文件的属性——最后修改时间，可以得知日志文件记录的是哪一天的日志，距离现在过去多少天了。</p><p>当每天的日志量不多，可以考虑保存最近30天的日志量，保存再多也没有意义。</p><p>当每日的日志量很多的话，出于存储空间的考虑，可以考虑保存最近7天的日志量。</p><h4><span id="shi-yong-php-shan-chu-ri-zhi-wen-jian">使用PHP删除日志文件</span><a href="#shi-yong-php-shan-chu-ri-zhi-wen-jian" class="header-anchor">#</a></h4><p>需要删除日志文件的时候，通过web端手动调用接口 或者 通过 CLI 的方式，自动定时的调用接口，删除日志文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除日志文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delLogs</span>(<span class="params"><span class="variable">$day</span>=<span class="number">30</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$day</span> &lt; <span class="number">8</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;保留不少于一个星期的日志文件&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$logDir</span> = <span class="title function_ invoke__">realpath</span>(LOG_PATH);   </span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delLogs2</span>(<span class="variable">$logDir</span>,<span class="variable">$day</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delLogs2</span>(<span class="params"><span class="variable">$logDir</span>,<span class="variable">$day</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$dh</span> = <span class="title function_ invoke__">opendir</span>(<span class="variable">$logDir</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dh</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$file</span> = <span class="title function_ invoke__">readdir</span>(<span class="variable">$dh</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$file</span> == <span class="string">&#x27;.&#x27;</span> || <span class="variable">$file</span> == <span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$filePath</span> = <span class="variable">$logDir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$filePath</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">filemtime</span>(<span class="variable">$filePath</span>) &lt; <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;-<span class="subst">&#123;$day&#125;</span> days&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;file=<span class="subst">&#123;$filePath&#125;</span>&quot;</span>;</span><br><span class="line">                    <span class="title function_ invoke__">unlink</span>(<span class="variable">$filePath</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delLogs2</span>(<span class="variable">$filePath</span>,<span class="variable">$day</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">closedir</span>(<span class="variable">$dh</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;目录错误：<span class="subst">&#123;$logDir&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="shi-yong-shell-jiao-ben-shan-chu-ri-zhi-wen-jian">使用SHELL脚本删除日志文件</span><a href="#shi-yong-shell-jiao-ben-shan-chu-ri-zhi-wen-jian" class="header-anchor">#</a></h4><p>使用 <code>find</code> 命令，查找日志目录下的名字格式为 <code>&quot;*.log&quot;</code> ，最后修改时间为20天以前的文件，把找到的文件删除掉。</p><p>把命令写入 <code>delLogs.sh</code> 文件，通过终端命令<code>sh delLogs.sh</code>执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> start delete <span class="built_in">log</span> 20 days ago...</span><br><span class="line">find /app/Logs/ -mtime +20 -name <span class="string">&quot;*.log&quot;</span> -<span class="built_in">exec</span>  <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> end delete <span class="built_in">log</span>...</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;si-lu&quot;&gt;思路&lt;/span&gt;&lt;a href=&quot;#si-lu&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;一般来说，日志文件都是按照日期来命名的，例如这样: &lt;code&gt;21_03_01.log&lt;/code&gt;。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="php" scheme="http://chenfeng.org/categories/php/"/>
    
    
    <category term="php" scheme="http://chenfeng.org/tags/php/"/>
    
    <category term="shell" scheme="http://chenfeng.org/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>使用PHP和SHELL脚本删除日志</title>
    <link href="http://chenfeng.org/2021/03/12/php-array/"/>
    <id>http://chenfeng.org/2021/03/12/php-array/</id>
    <published>2021-03-12T11:00:00.000Z</published>
    <updated>2022-07-10T02:53:27.807Z</updated>
    
    <content type="html"><![CDATA[<h4><span id="si-lu">思路</span><a href="#si-lu" class="header-anchor">#</a></h4><p>一般来说，日志文件都是按照日期来命名的，例如这样: <code>21_03_01.log</code>。</p><p>每一个日志文件只记录当天某个功能的日志信息，这种做法方便于定为错误。</p><p>通过日志文件的属性——最后修改时间，可以得知日志文件记录的是哪一天的日志，距离现在过去多少天了。</p><p>当每天的日志量不多，可以考虑保存最近30天的日志量，保存再多也没有意义。</p><p>当每日的日志量很多的话，出于存储空间的考虑，可以考虑保存最近7天的日志量。</p><h4><span id="shi-yong-php-shan-chu-ri-zhi-wen-jian">使用PHP删除日志文件</span><a href="#shi-yong-php-shan-chu-ri-zhi-wen-jian" class="header-anchor">#</a></h4><p>需要删除日志文件的时候，通过web端手动调用接口 或者 通过 CLI 的方式，自动定时的调用接口，删除日志文件。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除日志文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delLogs</span>(<span class="params"><span class="variable">$day</span>=<span class="number">30</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$day</span> &lt; <span class="number">8</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;保留不少于一个星期的日志文件&quot;</span>;</span><br><span class="line">        <span class="keyword">die</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="variable">$logDir</span> = <span class="title function_ invoke__">realpath</span>(LOG_PATH);   </span><br><span class="line">    <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delLogs2</span>(<span class="variable">$logDir</span>,<span class="variable">$day</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delLogs2</span>(<span class="params"><span class="variable">$logDir</span>,<span class="variable">$day</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$dh</span> = <span class="title function_ invoke__">opendir</span>(<span class="variable">$logDir</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dh</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$file</span> = <span class="title function_ invoke__">readdir</span>(<span class="variable">$dh</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$file</span> == <span class="string">&#x27;.&#x27;</span> || <span class="variable">$file</span> == <span class="string">&#x27;..&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$filePath</span> = <span class="variable">$logDir</span>.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$filePath</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">filemtime</span>(<span class="variable">$filePath</span>) &lt; <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;-<span class="subst">&#123;$day&#125;</span> days&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;file=<span class="subst">&#123;$filePath&#125;</span>&quot;</span>;</span><br><span class="line">                    <span class="title function_ invoke__">unlink</span>(<span class="variable">$filePath</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">delLogs2</span>(<span class="variable">$filePath</span>,<span class="variable">$day</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">closedir</span>(<span class="variable">$dh</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;目录错误：<span class="subst">&#123;$logDir&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="shi-yong-shell-jiao-ben-shan-chu-ri-zhi-wen-jian">使用SHELL脚本删除日志文件</span><a href="#shi-yong-shell-jiao-ben-shan-chu-ri-zhi-wen-jian" class="header-anchor">#</a></h4><p>使用 <code>find</code> 命令，查找日志目录下的名字格式为 <code>&quot;*.log&quot;</code> ，最后修改时间为20天以前的文件，把找到的文件删除掉。</p><p>把命令写入 <code>delLogs.sh</code> 文件，通过终端命令<code>sh delLogs.sh</code>执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> start delete <span class="built_in">log</span> 20 days ago...</span><br><span class="line">find /app/Logs/ -mtime +20 -name <span class="string">&quot;*.log&quot;</span> -<span class="built_in">exec</span>  <span class="built_in">rm</span> -rf &#123;&#125; \;</span><br><span class="line"><span class="built_in">echo</span> end delete <span class="built_in">log</span>...</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4&gt;&lt;span id=&quot;si-lu&quot;&gt;思路&lt;/span&gt;&lt;a href=&quot;#si-lu&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;一般来说，日志文件都是按照日期来命名的，例如这样: &lt;code&gt;21_03_01.log&lt;/code&gt;。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="php" scheme="http://chenfeng.org/categories/php/"/>
    
    
    <category term="php" scheme="http://chenfeng.org/tags/php/"/>
    
    <category term="shell" scheme="http://chenfeng.org/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的RANGE分区管理与预警</title>
    <link href="http://chenfeng.org/2020/12/23/mysql-partition/"/>
    <id>http://chenfeng.org/2020/12/23/mysql-partition/</id>
    <published>2020-12-23T10:30:00.000Z</published>
    <updated>2022-06-18T17:53:41.962Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL有四种分区类型，分别是RANGE分区、LIST分区、HASH分区和KEY分区。其中数RANGE分区使用最为普遍。</p><p>RANGE分区基于一个给定的分区键和分区值，把一个大的数据表分成多个连续且不重复的分区表。物理层面上是把一个大文件分割成多个小的文件。</p><h4><span id="shu-ju-biao-fen-qu-de-liang-chong-fang-shi">数据表分区的两种方式</span><a href="#shu-ju-biao-fen-qu-de-liang-chong-fang-shi" class="header-anchor">#</a></h4><p>方式一，创建表的同时，设置表分区</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tablename(col1,col2,col3,...)</span><br><span class="line"><span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span>(col_key)</span><br><span class="line">(</span><br><span class="line">    <span class="keyword">PARTITION</span> p1 <span class="keyword">VALUES</span> LESS THAN (value1),</span><br><span class="line">    <span class="keyword">PARTITION</span> p2 <span class="keyword">VALUES</span> LESS THAN (value2),</span><br><span class="line">    <span class="keyword">PARTITION</span> p3 <span class="keyword">VALUES</span> LESS THAN (value3),</span><br><span class="line">    <span class="keyword">PARTITION</span> p_maxvalue <span class="keyword">VALUES</span> LESS THAN (MAXVALUE)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>方式二，对已创建的表分区</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tablename <span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="keyword">RANGE</span>(col_key) </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">PARTITION</span> p1 <span class="keyword">VALUES</span> LESS THAN (value1),</span><br><span class="line">    <span class="keyword">PARTITION</span> p2 <span class="keyword">VALUES</span> LESS THAN (value2),</span><br><span class="line">    <span class="keyword">PARTITION</span> p3 <span class="keyword">VALUES</span> LESS THAN (value3),</span><br><span class="line">    <span class="keyword">PARTITION</span> p_maxvalue <span class="keyword">VALUES</span> LESS THAN (MAXVALUE)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>分区的时候，最好设置一个最大分区 <code>p_maxvalue</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">PARTITION</span> p_maxvalue <span class="keyword">VALUES</span> LESS THAN (MAXVALUE)</span><br></pre></td></tr></table></figure><p>存放意料之外的数据。例如：</p><ul><li>当出现错误数据，大于所有分区值时，会存放到 <code>p_maxvalue</code> 分区</li><li>当来不及增加分区时，数据会存放到 <code>p_maxvalue</code> 分区，且对前面的分区无影响</li></ul><p>总之，设置 <code>p_maxvalue</code> 分区并不是为了存放数据，而是在出现意外的时候，程序不至于报错。</p><h4><span id="xian-shi-yi-fen-qu-de-shu-ju-biao">显示已分区的数据表</span><a href="#xian-shi-yi-fen-qu-de-shu-ju-biao" class="header-anchor">#</a></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">TABLE_NAME tname,                   <span class="comment">-- 数据表名</span></span><br><span class="line">TABLE_ROWS trow                     <span class="comment">-- 数据行数</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">information_schema.`TABLES`</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">TABLE_SCHEMA <span class="operator">=</span> &#123;$dbName&#125;</span><br><span class="line"><span class="keyword">AND</span> CREATE_OPTIONS <span class="keyword">LIKE</span> <span class="string">&#x27;%partitioned%&#x27;</span>;</span><br></pre></td></tr></table></figure><img src="http://tva1.sinaimg.cn/large/7d4c6366gy1glxvwlv028j20zu09j0sw.jpg" width="700" align="bottom"><center>显示分区的数据表</center><h4><span id="xian-shi-mou-ge-biao-de-fen-qu-lie-biao">显示某个表的分区列表</span><a href="#xian-shi-mou-ge-biao-de-fen-qu-lie-biao" class="header-anchor">#</a></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">PARTITION_ORDINAL_POSITION onum,    <span class="comment">-- 分区序号</span></span><br><span class="line">PARTITION_NAME pname,               <span class="comment">-- 分区名字</span></span><br><span class="line">PARTITION_METHOD pmethod,           <span class="comment">-- 分区方式</span></span><br><span class="line">PARTITION_EXPRESSION pkey,          <span class="comment">-- 分区键</span></span><br><span class="line">PARTITION_DESCRIPTION pvalue,       <span class="comment">-- 分区值</span></span><br><span class="line">TABLE_ROWS trows                    <span class="comment">-- 数据行数</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">information_schema.`PARTITIONS`</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">TABLE_SCHEMA <span class="operator">=</span> &#123;$dbName&#125;</span><br><span class="line"><span class="keyword">AND</span> TABLE_NAME <span class="operator">=</span> &#123;$tname&#125;;</span><br></pre></td></tr></table></figure><img src="http://tvax4.sinaimg.cn/large/7d4c6366gy1glxw1kt2cnj20q60l074y.jpg" width="700" align="bottom"><center>分区列表</center><h4><span id="shan-chu-fen-qu">删除分区</span><a href="#shan-chu-fen-qu" class="header-anchor">#</a></h4><p>当历史数据归档后，分区的数据行数为0，此时该分区已经无用，为了减少系统的文件数，可以把它删除掉。</p><img src="http://tvax2.sinaimg.cn/large/7d4c6366gy1glxwhqxvfej20q00kvdgh.jpg" width="700" align="bottom"><center>数据归档的分区</center><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; <span class="keyword">DROP</span> <span class="keyword">PARTITION</span> &#123;$pname&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>使用 DROP PARTITION 删除分区的同时，也会删除分区里的数据</p></blockquote><h4><span id="qu-xiao-fen-qu">取消分区</span><a href="#qu-xiao-fen-qu" class="header-anchor">#</a></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; REMOVE PARTITIONING;</span><br></pre></td></tr></table></figure><blockquote><p>取消分区对表数据无影响</p></blockquote><h4><span id="zeng-jia-fen-qu">增加分区</span><a href="#zeng-jia-fen-qu" class="header-anchor">#</a></h4><p>增加分区之前，需要删除最大分区 <code>p_maxvalue</code>。<br>因为分区是连续递增的，所以需要把最大分区 <code>p_maxvalue</code> 删除，再增加新的分区。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; <span class="keyword">ADD</span> <span class="keyword">PARTITION</span> </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">PARTITION</span> &#123;$pname&#125; <span class="keyword">VALUES</span> LESS THAN (value1)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4><span id="chai-fen-fen-qu">拆分分区</span><a href="#chai-fen-fen-qu" class="header-anchor">#</a></h4><p>当来不及增加分区时，数据会存放到 <code>p_maxvalue</code> 分区。当发现 <code>p_maxvalue</code> 分区有数据时，应该尽快创建新分区，并把数据迁移到新分区上。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; REORGANIZE <span class="keyword">PARTITION</span> p_maxvalue <span class="keyword">INTO</span> </span><br><span class="line">(</span><br><span class="line"><span class="keyword">PARTITION</span> p_20210301 <span class="keyword">VALUES</span> less than (<span class="number">1614528000</span>),</span><br><span class="line"><span class="keyword">PARTITION</span> p_maxvalue <span class="keyword">VALUES</span> less than (MAXVALUE)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>此时数据保存到了 <code>p_20210301</code> 分区，通过</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> ....;</span><br></pre></td></tr></table></figure><p>可以看到 <code>partitions</code> 字段的值为 <code>p_20210301</code> ,表示查询的内容在 <code>p_20210301</code> 分区。</p><p>此时若发现查询并未使用到索引，则需要优化一下分区。</p><p>执行语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; REBUILD <span class="keyword">PARTITION</span> p_maxvalue,p_20210301;         <span class="comment">-- 重建分区</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; ANALYZE <span class="keyword">PARTITION</span> p_maxvalue,p_20210301;         <span class="comment">-- 分析分区</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &#123;$dbName&#125;.&#123;$tname&#125; OPTIMIZE <span class="keyword">PARTITION</span> p_maxvalue,p_20210301;;</span><br></pre></td></tr></table></figure><p>再次执行查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN <span class="keyword">SELECT</span> ....;</span><br></pre></td></tr></table></figure><p>发现已经使用了索引。</p><blockquote><p>REORGANIZE PARTITION 也可以用于重命名分区，重命名分区后也需要执行一下优化分区语句。</p></blockquote><h4><span id="fen-qu-yu-jing">分区预警</span><a href="#fen-qu-yu-jing" class="header-anchor">#</a></h4><p>以下分区预警思路针对RANGE分区类型，基于时间的连续分区。</p><p>使用分区预警的好处有：</p><ul><li>可以提前知晓备用的分区不足，不用逐个表检查</li><li>可以不用一下子准备多个备用分区，减少分区数量</li></ul><p>分区预警的思路如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 分区预警，预警值默认60天</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">warningPartition</span>(<span class="params"><span class="variable">$warningDays</span>=<span class="number">60</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取所有的数据库</span></span><br><span class="line">    <span class="variable">$dbNames</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">get_all_db</span>();</span><br><span class="line">    <span class="variable">$result</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$dbNames</span> <span class="keyword">as</span> <span class="variable">$dbName</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取指定数据库的分区表列表</span></span><br><span class="line">        <span class="variable">$sqlTable</span> = <span class="string">&quot;SELECT TABLE_NAME tname,TABLE_ROWS trow FROM information_schema.`TABLES` WHERE TABLE_SCHEMA=&#x27;<span class="subst">&#123;$dbName&#125;</span>&#x27; AND CREATE_OPTIONS LIKE &#x27;%partitioned%&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$listTable</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">querySql</span>(<span class="variable">$sqlTable</span>);</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$listTable</span> <span class="keyword">as</span> <span class="variable">$table</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 获取指定数据库，指定表的除p_maxvalue外的最大分区的值</span></span><br><span class="line">            <span class="variable">$sqlPartition</span> = <span class="string">&quot;SELECT PARTITION_NAME pname,PARTITION_DESCRIPTION pvalue FROM information_schema.`PARTITIONS` WHERE TABLE_SCHEMA=&#x27;<span class="subst">&#123;$dbName&#125;</span>&#x27; AND TABLE_NAME=&#x27;<span class="subst">&#123;$table&#125;</span>&#x27; AND PARTITION_NAME != &#x27;p_maxvalue&#x27; ORDER BY PARTITION_DESCRIPTION DESC LIMIT 1&quot;</span>;</span><br><span class="line">            <span class="variable">$listPartition</span> = <span class="built_in">self</span>::<span class="title function_ invoke__">querySql</span>(<span class="variable">$sqlPartition</span>);</span><br><span class="line">            <span class="variable">$pvalue</span> = <span class="variable">$listPartition</span>[<span class="number">0</span>][<span class="string">&#x27;pvalue&#x27;</span>];</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 最大分区的值小于阈值，则保存预警信息</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$pvalue</span> - <span class="title function_ invoke__">time</span>() &lt; <span class="variable">$warningDays</span> * <span class="number">86400</span>)</span><br><span class="line">                <span class="variable">$result</span>[] = <span class="string">&quot;数据表：<span class="subst">&#123;$dbName&#125;</span>.<span class="subst">&#123;$table&#125;</span>，最新分区：<span class="subst">&#123;$listPartition[0][&#x27;pname&#x27;]&#125;</span> - <span class="subst">&#123;$listPartition[0][&#x27;pvalue&#x27;]&#125;</span>，预警阈值：<span class="subst">&#123;$warningDays&#125;</span>天&quot;</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分区预警程序 + <a href="/2021/04/07/telegram">Telegram机器人</a>可以实时的收到预警信息。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;MySQL有四种分区类型，分别是RANGE分区、LIST分区、HASH分区和KEY分区。其中数RANGE分区使用最为普遍。&lt;/p&gt;
&lt;p&gt;RANGE分区基于一个给定的分区键和分区值，把一个大的数据表分成多个连续且不重复的分区表。物理层面上是把一个大文件分割成多个小的文件。&lt;</summary>
      
    
    
    
    <category term="mysql" scheme="http://chenfeng.org/categories/mysql/"/>
    
    
    <category term="mysql" scheme="http://chenfeng.org/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>叠石山游记</title>
    <link href="http://chenfeng.org/2020/10/07/dss/"/>
    <id>http://chenfeng.org/2020/10/07/dss/</id>
    <published>2020-10-07T23:00:00.000Z</published>
    <updated>2022-06-18T17:57:19.105Z</updated>
    
    <content type="html"><![CDATA[<p>趁着十一假期，闲来无事，于是上叠石山走一走。</p><p>一来听老妈说叠石山上修了路，有人在上面设了佛（可以拜拜的神仙），有了香火，想去看看变成什么样子；</p><p>二来也想登顶去看看河浦全景。</p><p>遥想上一次上叠石山应该是2017年的春节，和同学两个人在傍晚的时候上叠石山散步，拍了不少逗逼照片，怀念当年简单的快乐。</p><p>从家里步行15分钟就到达山脚下，远远就看到了一个牌坊，写着「叠石书院」，看起来挺气派的。</p><img src="http://tva1.sinaimg.cn/large/7d4c6366gy1gjhnno7kbcj23402c0npe.jpg" width="700" align="bottom"><center>叠石山下的牌坊</center><p>穿过牌坊后，右手边有一大片空地，摆有挺多便民的健身设施，应该是给老人晨练活动的。</p><p>如果是开车过来的，可以把车停在这里。</p><p>再往前走可看见竖着一块石碑，石碑看起来很新，应该是翻新过或者重新做的。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhntyletgj30u0140e84.jpg" width="700" align="bottom"><center>石碑</center><p>石碑后面是一片池塘，水很浅，长了很多杂草，还有不少枯枝烂叶。</p><p>这里被称为「龙潭」，可能是因为小池塘的后面是「虎穴」吧。叫「龙潭虎穴」听起来比较有意境。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhoctkaj8j31400u0hdw.jpg" width="700" align="bottom"><center>龙潭虎穴</center><p>上山的泥土坡路都铺上了混泥土，还做了围栏，改变很大，颇有景区的样子。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhnw281tlj31400u0e83.jpg" width="700" align="bottom"><center>斜坡</center><p>上了斜坡后到达小平台，此处设有石凳，可供行人休息和观光。</p><p>旁边就展示了叠石山的导游图和各个石刻景点的照片。若是不熟悉叠石山的朋友，可以根据这个导游图按照石刻景点的顺序逐个到达。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhoi80afbj31400u07wi.jpg" width="700" align="bottom"></p><center>导游图</center><p>站在小平台上，远远就可以望到「虎穴」石刻。</p><p>我印象中这里有野路可以上山，但可能我忘记了，竟然找不到出路，于是返回来老老实实走台阶上山。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhofol09hj30u0140x6r.jpg" width="700" align="bottom"><center>虎穴</center><p>上山的楼梯很好走，收拾的很干净，打心里敬佩家乡的爱心人士，为家乡打造了一处出行好去处。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhobd8w9vj30u0140qv8.jpg" width="700" align="bottom"><center>s型台阶</center><p>可能考虑上山的楼梯比较长，不利于老年人小孩子，所以在楼梯中间的空地建了亭子厕所，方便大家休息。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhoc1lp0kj31400u0u0z.jpg" width="700" align="bottom"><center>休息的亭子</center><p>终于来到设有香火的地方，按照导游图上的标记，这里就是「圣贤洞」。</p><p>记忆中这个石洞挺深的，里面被丢了很多垃圾，走进去就有一阵臭味，墙壁被烟火熏得发黑，路过通常都不进去的。</p><p>如今却被改造成小屋子一般，通了水电，收拾的干干净净，用来摆放神位。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhnxvyt45j31400u0u0y.jpg" width="700" align="bottom"><center>圣贤洞</center><p>石洞外面也搭了铁皮遮阴，摆了很多凳子桌子，供大家休息聊天。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho1111myj31400u0kjm.jpg" width="700" align="bottom"><center>圣贤洞外</center><p>「圣贤洞」的后面就是「九曲径」，上面是「龙凤石」。</p><p>「龙凤石」这个名字我第一次看到，我们都管着叫「大石」，上「大石」可以借助旁边的大树上去，不过需要手脚并用，有点危险；不想爬树也可以再往上走，绕一下也能到达。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhnynx0usj31400u0npg.jpg" width="700" align="bottom"></p><center>九曲径</center><p>上到大石，记得小的时候还开玩笑说不能大声说话，大声说话会让石头裂开，最后从山上滚下去。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho3c24ajj31400u07wk.jpg" width="700" align="bottom"></p><center>大石</center><p>站在大石上，有远眺河浦最好的视野。</p><p>河浦街道的几个村落互相紧邻着，房子越来越多，越建越高，不断得向外围扩张。</p><p>还记得当年第一次上「大石」时，有小伙伴跟我们介绍，河浦形状似一把枪，如今看来已无迹可寻了。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhnzglc1cj31lk0u0kjo.jpg" width="700" align="bottom"><center>大石上</center><p>「大石」旁边有个炉位，这里是烧番薯的地方。</p><p>当年可以呼唤几个同学，带上一袋子番薯和几瓶水，上「大石」度过愉快的一天，那段时光真是无忧无虑。</p><p>这么多年了，多少人的青春里有它，多少人因它而快乐。</p><p>可能在我们那个年代，娱乐的项目太少，于是上「大石」烧番薯就成了一个不错的选项，有的吃，有的玩，还有趣。</p><p>如今，看着炉位旁边绿油油的杂草，还开了花，想必现在的小孩子都不会上「大石」烧番薯了吧！</p><p>也是，现在的娱乐太多了，手机太好玩了。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho2lzs66j31400u0qv9.jpg" width="700" align="bottom"><center>烧番薯</center><p>从大石下来后，遇见一行大叔大妈，应该是本地人，于是我慢慢的跟在后面，听其中一个大叔介绍叠石山的一些事迹。</p><blockquote><p>虽然叠石山来过不少次，但其实我对叠石山的历史也不很了解，只知道以前有个人，叫<a href="https://baike.baidu.com/item/%E9%99%88%E8%8B%B1%E7%8C%B7">陈英猷</a> 在这里潜心读书，出名后，很多人来这里找他拜师学习而已。</p></blockquote><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho46yyexj31400u0x6s.jpg" width="700" align="bottom"><center>同行的大叔大妈</center><p>「幽涧泉」下是真的有泉水的，记得以前到这里会洗手洗脸的，嬉戏一番，只不过当天没见到泉水，不过犹可见湿润的沙石。</p><p>「幽涧泉」往下就是「旋螺洞」，由于我脱离了大叔大妈的队伍，只身一人，加上上个月在山上被蚂蜂蜇了几针，到现在还心有余悸，于是就没往下去了。</p><p>旋螺洞的图片和介绍可以看看这一篇 <a href="https://www.meipian.cn/rubufbf">游叠石山</a></p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho6lnmc3j31400u01kz.jpg" width="700" align="bottom"><center>幽涧泉</center><p>按照导游图「寿」和「古松鹤舞」就在附近。</p><p>「寿」藏的比较隐秘，在小路旁边的大石的背后，需要绕一下才能看到。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho7k6d99j30u0140e85.jpg" width="700" align="bottom"></p><center>寿</center><p>「古松鹤舞」也是，沿着小路走，记得回头看一下就能看到。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho8n4yn2j31400u04qu.jpg" width="700" align="bottom"><center>古松鹤舞</center><p>接着来到「石室」和「叠石井」，这里就是先人读书学习的地方，我们也叫「叠石书房」。</p><p>石室内低矮、潮湿、阴暗，布局简陋，蚊子成群。</p><p>墙壁上用红色颜料写了很多名字，类似XX、XX、XX结拜兄弟之类的，看到这些难免会心一笑，我甚至可以想象到一群小年轻热血方刚的跪在一起发誓。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho9ihvt0j30u0140x6s.jpg" width="700" align="bottom"></p><center>叠石书房</center><p>从「石室」出来，往上走左拐就看到了「河图」。</p><p>这个神秘的图案一直在这，没人知道它代表了什么，表达了什么意思。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho57f9x7j31400u0u11.jpg" width="700" align="bottom"><center>河图</center><p>根据导游图，河图过后就是「仙踪」，但我竟然给漏了，直到下山后才发现。仙踪的图片来源于 <a href="https://www.meipian.cn/24h5d94t">叠石山风景区</a></p><p>「仙踪」其实就是有一个大脚印，并且只有一个。</p><p>相传是神仙一步跨过几座山，所以只在此处留下一个脚印。</p><img src="https://ss2.meipian.me/users/7274782/316811e9ce0647689f78c4fcfc4a3db1.jpg?meipian-raw/bucket/ivwen/key/dXNlcnMvNzI3NDc4Mi8zMTY4MTFlOWNlMDY0NzY4OWY3OGM0ZmNmYzRhM2RiMS5qcGc=/sign/2a054d8f6d94361d59969b6ff2200c3a.jpg" width="700" align="bottom"><center>仙踪</center><p>最后一个打卡点是「海阔天空」。</p><p>听老一辈说以前从这里望下去是一片沧海桑田，无边无际。</p><p>但由于河浦这里人多地少，用地紧张，所以要填海造陆。</p><p>到如今，海没了，田慌了，时过境迁，物是人非，再也见不到当初的海阔天空了。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjho62hj8wj31400u0x6s.jpg" width="700" align="bottom"><center>海阔天空</center><p>离开「海阔天空」后一路径直下山，结束叠石山之行。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhod7onxoj31400u04qq.jpg" width="700" align="bottom"><center>又遇牌坊</center><p>最后说明一下写这一篇游记的目的。</p><p>我这一路上山下山，看到沿途有很多垃圾。</p><p>塑料瓶，塑料袋、零食袋，果皮甚至看到整张的野餐垫。</p><p>五颜六色的垃圾跟大自然实在不搭，大煞风景。</p><p>爱心人士开始开发叠石山，并且在上面设置了香炉。</p><p>我们知道河浦人爱拜老爷拜神仙，香火所到之处，人流必跟之，人流所到之处往往会有产生垃圾的问题。</p><p>我相信未来叠石山会成为一个知名景点，会有更多的人上叠石山上香或者游玩，但我不希望看到山上因此出现越来越多的垃圾。</p><p>所以希望爱心人士在开发叠石山的同时，关注一下环境保护方面的问题。</p><p>比如：</p><ol><li>可以发起一场「清山活动」，组织一些热心人士上山把垃圾带下来</li><li>沿着山路摆放「不乱扔垃圾」的提示语，提醒大家保护环境</li></ol><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gjhoaj3x42j30u0140npg.jpg" width="700" align="bottom"><center>到处垃圾</center>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;趁着十一假期，闲来无事，于是上叠石山走一走。&lt;/p&gt;
&lt;p&gt;一来听老妈说叠石山上修了路，有人在上面设了佛（可以拜拜的神仙），有了香火，想去看看变成什么样子；&lt;/p&gt;
&lt;p&gt;二来也想登顶去看看河浦全景。&lt;/p&gt;
&lt;p&gt;遥想上一次上叠石山应该是2017年的春节，和同学两个人在傍</summary>
      
    
    
    
    <category term="personal" scheme="http://chenfeng.org/categories/personal/"/>
    
    
    <category term="爬山" scheme="http://chenfeng.org/tags/%E7%88%AC%E5%B1%B1/"/>
    
    <category term="游玩" scheme="http://chenfeng.org/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>探索小龙斗峰</title>
    <link href="http://chenfeng.org/2020/09/19/xld/"/>
    <id>http://chenfeng.org/2020/09/19/xld/</id>
    <published>2020-09-19T19:00:00.000Z</published>
    <updated>2022-06-18T17:57:38.951Z</updated>
    
    <content type="html"><![CDATA[<p>清远佛冈猪咸脑山，又名猪牙山，海拔889米，山高路陡，怪石嶙峋，地形险要。与韶关龙斗峰地貌风光相似，所谓“小龙斗”。</p><p>9月6日周日，天气多云转阴。</p><p>7:30分在客村地铁B出口集合，8:00准时出发，途径从化，进入清远，最终到达小龙斗山下的旁边的村庄。<br>在从化服务区停留的时候，与走在尾队的领队小湘闲聊了一下，得知小龙斗是省内三星路线中危险系数最大的，同时景色也是最好的。<br>听到这里不由得兴奋起来，毕竟我也已经拿下几条三星路线了，甚至开始“膨胀”了，准备去尝试四星路线了。</p><p>大概10:00的时候到达山脚下，在领队的带领下，大家一起做热身动作，然后成群结队出发。</p><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1gikgj6qls6j23402c0nph.jpg" width="700" align="bottom"><center>上山前热身</center><p>以前我喜欢紧跟着前队的人，一路无语，专心赶路，走累了就停下来口水，调整一下，然后继续走；走快了就停下来，等一等后面的人，实在等不到了，又开始走。最后变成在山下等，最长一次是等了两个多小时。</p><p>鉴于小龙斗的危险系数和景色，我这次想要慢点走，并且体验一下走在尾队的感受。</p><h3><span id="jian-nan-shang-shan">艰难上山</span><a href="#jian-nan-shang-shan" class="header-anchor">#</a></h3><p>上山后全程野路，经过一片又一片的密林，时而要钻过矮竹林，还要当心被打脸。</p><img src="http://tva1.sinaimg.cn/large/7d4c6366gy1gix9r4pabej23282aob2d.jpg" width="700" align="bottom"><center>上山 休息点</center><p>这里的竹子都很细，但每一根都很挺拔。<br>地上覆盖着厚厚的落叶，脚步走过，沙沙作响。</p><p>竹林里的竹子密密麻麻，在阴暗光线的笼罩下，有一瞬间我恍惚了，我感觉到一排竹子在我面前晃荡，这种奇怪的感觉让我只想快速离开。</p><p>离开竹林后要通过一处乱石水涧，灰黑色的大石头经过流水的浸泡，已经开始长青苔了。<br>领队在乱石间娴熟的迈步，跟着跨过几根枯木，一个跳跃上了小土坡，看起来是在告诉后面的人，跟着我这样走就可以安全的过来。</p><p>之前有人说山路很滑，我想象中的是那种湿润的黄土坡，没想过还有长青苔的大石头，真是too young too simple，这个滑倒可痛好多，所以我倒是小心翼翼的走好每一步，队友间互相搀扶着，遇到需要拉一把的即可伸出援手。</p><p>走在尾队的初步感觉是：<br>累了停一下，渴了停一下，别人停一下我也停一下，完全没有赶路的压力。</p><h3><span id="ai-zai-xiao-shu-lin">爱在小树林</span><a href="#ai-zai-xiao-shu-lin" class="header-anchor">#</a></h3><p>中午13点的时候我们走到了小树林，前面的人已经早到半个小时了，大家各自找地方坐下来休息补给。</p><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1gix9zxou7zj21gw13q7wh.jpg" width="700" align="bottom"><center>小树林 午餐点</center><p>刚一到达，就看到领队在分西瓜了，看到我们到达，拿着几片西瓜就递过来，这种感觉真好。</p><p>后来才知道，这一次的西瓜是其中一位徒友背上来的，说是为了锻炼负重<br>，于是背了个如桶一般的大背包，里面装了很多东西，其中就包括了这个西瓜。</p><p>大家把各自带的美食都拿出来分享，放到了野餐垫上。看到这个场面，感觉我应该带点冬枣或者柑橘来的。<br>接着有小伙伴拿出了啤酒，我在他的怂恿下也试了一点，果然还是有点苦涩。</p><img src="http://tvax3.sinaimg.cn/large/7d4c6366gy1gix8t1y9vsj23342bchdw.jpg" width="700" align="bottom"><center>野餐垫 分享食物</center><p>午餐我还是一罐八宝粥外加几个小水果就搞定了。</p><p>一起走的朋友这一次也吃了八宝粥，但吃下没多久就开始拉肚子。<br>我估计是吃到生冷的东西，加上阴冷的天气，导致着凉了。<br>据他说这是他第一次在户外吃八宝粥，听后我感觉这样太冒险了。</p><p>由此对户外食物分享有一点反思：</p><blockquote><p>大家开开心心一起出来游玩，还带了喜欢吃的食物出来分享，这本身是好的，但是作为接受分享的人，要根据自身的肠胃能力来做选择。</p><p>最保险的做法是吃自己带的食物和吃自己日常吃过的食物。<br>对于没吃过或者不常吃的就要谨慎对待。否则在荒郊野外吃出肠胃问题，后果无法想象。</p><p>我见过分享的食物种类还挺多的，有：小番茄、提子、青瓜、自制的凤爪、自制的辣条、不认识的啤酒、瓜子、诱人的小零食和面包等等。<br>因为我自知肠胃消化能力不强，所以对于没吃过的食物，一般都不会轻易尝试。<br>同时也建议徒友们不要轻易尝试对自己身体“陌生”的食物。</p><p>总之，户外分享精神值得提倡和宣扬，但接受分享需要谨慎。</p></blockquote><p>看天气预报，说今天天气是多云的，无奈天公不作美，天气持续阴冷。<br>早上做热身运动的时候莫名奇妙的流了一身汗，一直到中午都还没干，被汗湿透的衣服贴着身体，感觉到阴凉，心想失策了，应该带件衣服来更换的。</p><p>大家“酒足饭饱”后纷纷收拾行囊陆续出发了，眼看没剩几个人了，作为尾队的我们也赶紧起动，跟上大家的步伐。爬了半个小时坡，终于上到山脊线上。</p><img src="http://tvax3.sinaimg.cn/large/7d4c6366gy1gixbew1kzxj23342bchdx.jpg" width="700" align="bottom"><center>山顶前的陡坡</center><h3><span id="shan-ding-pai-zhao">山顶拍照</span><a href="#shan-ding-pai-zhao" class="header-anchor">#</a></h3><p>山上风光无限好，让人眼前一亮，豁然开朗，乱石嶙峋，险峭奇特。</p><p>有的形似巨蟒出洞，有的形似雄鹰展翅，有的形似神龟望天，有的形似犄角凸起，有的形似骆驼匍匐……，看得我眼花缭乱。<br>巨石屹立，如同一道道险阻的关隘，越过重重阻碍，迎接我们的是一望无际的蓝天白云。</p><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1gixboncs16j22c0340e83.jpg" width="700" align="bottom"><center>山顶怪石</center><p>无限风光在此，无限风光在险峰。</p><p>山顶的打卡点颇多，景色也别具一格。站在巨石上，眺望远方，蓝天与白云相间，远处有有河流蜿蜒流长，稍近一些有村庄星罗棋布，更近的地方是郁郁葱葱的丛林，而脚下是令人望而却步的悬崖。美中不足的是视野略带灰蒙。微风吹拂而过，带走整个上午的阴冷湿气，彷佛在提醒这我们，振作起来，拍照时间到了。</p><img src="http://tva4.sinaimg.cn/large/7d4c6366gy1gixezhstb7j23402c0qv7.jpg" width="700" align="bottom"><center>眺望</center><p>路过打卡点，<strong>阳光</strong> 领队已经在那里等候，凑齐四人，摆好pose，快门一按，就把大家的笑容给定住了。</p><p>此行真心要夸夸 <strong>32号</strong> 的领队，把大家照顾的很周全。<br><img src="http://tvax4.sinaimg.cn/large/7d4c6366gy1gixdmmdet6j21400u0tc9.jpg" width="700" align="bottom"></p><center>即兴pose</center><p>来到集合地点后，照例拍个大合照。<br><img src="http://tvax3.sinaimg.cn/large/7d4c6366gy1gixeebnysnj23402c0u0y.jpg" width="700" align="bottom"></p><center>大合照</center><p>大合照后留有一些时间给大家自由活动和拍照，看大家发挥搞怪、逗比的表演也是一件享受的事。</p><img src="http://tvax3.sinaimg.cn/large/7d4c6366gy1gixfg836ilj23402c0npe.jpg" align="bottom" width="700"><center>Emmm 1</center><img src="http://tvax2.sinaimg.cn/large/7d4c6366gy1gixbn52i3fj22c03404qq.jpg" align="bottom" width="700"><center>Emmm 2</center><p>山顶危峰耸立，怪石遍布，有时候需要在石缝间穿过，攀爬。不过难度不大，可以爬到猪牙峰最高处看小龙斗山全景。</p><p>山顶上百草凋零，脚步所过皆是颓黄惨淡。时而冷风掠过，为数不多的绿树瑟瑟发抖。顽强的石头仍傲然挺立着，在温暖的阳光照耀下，发出雄伟的光芒。</p><img src="http://tvax4.sinaimg.cn/large/7d4c6366gy1gixfqawc23j23402c0npe.jpg" width="700" align="bottom"><center>俯瞰</center><p>在不知不觉中，上午一直湿透的衣服也逐渐干了，心情舒畅，准备下山返回。</p><h3><span id="zui-nan-shi-xia-shan">最难是下山</span><a href="#zui-nan-shi-xia-shan" class="header-anchor">#</a></h3><p>下午14:30开始从垭口这里下山，这里是今天最难的一段。<br>路滑险陡，需要绳降。<br>要保持距离，一个接一个下去，否则有可能踩落滚石误伤下面的伙伴。</p><img src="http://tvax1.sinaimg.cn/large/7d4c6366gy1gixgiywg68j22uo3yaqv6.jpg" alt="绳降" align="bottom" width="700"><center>绳降1</center><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1gixgrdz4olj22bc334hdv.jpg" alt="绳降" align="bottom" width="700"><center>绳降2</center><p>差不多花20分钟可以下完乱石坡，然后花1个小时穿过小树林。</p><p>午后阳光灿烂，林荫间的阴冷早已被驱散。<br>温度刚好，一路下山都没有出汗。<br>天气干燥，有些野路沙化，有点陡滑。<br>这个时候手套是个好帮手，带上手套，扶着两边的树干走就行。<br>尽管这样，我还是光荣地臀降了一次。</p><p>想到上周在某个户外群里看到的，也是在小龙斗，有个女生刚下山的时候就崴到脚了，最后一路臀降下山，看视频并没有凄凄惨惨戚戚，反而一路欢声笑语，趣味十足。</p><p>最后，走半小时的机耕路，4点钟就可以出到终点啦！</p><img src="http://tvax1.sinaimg.cn/large/7d4c6366gy1gixgt144chj22c0340e82.jpg" width="700" align="bottom"><center>机耕路</center><p>到达终点后，上车拿换洗的衣物，在山下一位阿姨的家里洗澡，换上干净的衣服，舒服。然后喝了几大碗绿豆糖水，满足了。</p><p>走出院子，望向小龙斗峰。回想这一路的忍耐都值得，感谢队友的陪伴，感谢领队的照顾。</p><img src="http://tvax2.sinaimg.cn/large/7d4c6366gy1gixhsxfqqoj23282aokjm.jpg" width="700" align="bottom"><center>麻雀 电线杆</center><p>一路走下来，小龙斗路线总体不难，风景倒是不错。<br>徒步全程约8公里，需要6个多小时，路线属三星难度。</p><p>一路经过无数迷坡乱石，需要手脚并用攀爬，必备手套和登山杖。<br>下山急降坡那里险陡路滑，需要绳降，务必小心落石。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;清远佛冈猪咸脑山，又名猪牙山，海拔889米，山高路陡，怪石嶙峋，地形险要。与韶关龙斗峰地貌风光相似，所谓“小龙斗”。&lt;/p&gt;
&lt;p&gt;9月6日周日，天气多云转阴。&lt;/p&gt;
&lt;p&gt;7:30分在客村地铁B出口集合，8:00准时出发，途径从化，进入清远，最终到达小龙斗山下的旁边的村</summary>
      
    
    
    
    <category term="personal" scheme="http://chenfeng.org/categories/personal/"/>
    
    
    <category term="爬山" scheme="http://chenfeng.org/tags/%E7%88%AC%E5%B1%B1/"/>
    
    <category term="游玩" scheme="http://chenfeng.org/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>Windows下PHP如何添加扩展</title>
    <link href="http://chenfeng.org/2020/08/22/PHP-extensions/"/>
    <id>http://chenfeng.org/2020/08/22/PHP-extensions/</id>
    <published>2020-08-22T19:00:00.000Z</published>
    <updated>2022-06-18T17:50:47.873Z</updated>
    
    <content type="html"><![CDATA[<p>Windows下，PHP添加扩展，步骤如下：</p><ol><li>找到目标扩展</li><li>把扩展文件放到PHP扩展文件夹里</li><li>添加扩展配置</li><li>重启</li></ol><p>下面以添加redis扩展为例。</p><h3><span id="que-ding-php-ban-ben-xin-xi">确定PHP版本信息</span><a href="#que-ding-php-ban-ben-xin-xi" class="header-anchor">#</a></h3><p>访问 <strong>phpinfo.php</strong>，找到这三个字段的值：</p><ul><li>PHP Version</li><li>Architecture</li><li>Thread Safety</li></ul><img src="http://tva4.sinaimg.cn/large/7d4c6366gy1gi1x35ukyvj20q60mo0u1.jpg" width="700" align="bottom"><center>phpinfo</center><p>从上图可知，需要找支持PHP版本7.0、x86架构、线程安全的redis扩展。</p><h3><span id="cha-zhao-kuo-zhan">查找扩展</span><a href="#cha-zhao-kuo-zhan" class="header-anchor">#</a></h3><p>到<a href="http://pecl.php.net/">PECL</a>查找redis扩展，输入扩展名字，查找。</p><img src="http://tva3.sinaimg.cn/large/7d4c6366gy1gi1x3ifk4dj20qq0h8t9w.jpg" width="700" align="bottom"><center>PECL官网</center><p>从查找结果列表中找到redis扩展。</p><img src="http://tva4.sinaimg.cn/large/7d4c6366gy1gi1x3nmocfj20qq0gddgk.jpg" width="700" align="bottom"><center>查找结果列表</center><p>点击进入，看到有不同版本的redis扩展。</p><blockquote><p>注意要找稳定版(statble)的DLL。</p></blockquote><img src="http://tvax1.sinaimg.cn/large/7d4c6366gy1gi1z0970g7j20lf0o6juk.jpg" width="700" align="bottom"><center>不同版本的redis扩展</center><p>根据第一步确定的信息，可以找到目标扩展，点击下载。</p><img src="http://tvax1.sinaimg.cn/large/7d4c6366gy1gi1x3rvy3qj20qq0prmz3.jpg" width="700" align="bottom"><center>目标扩展</center><h3><span id="an-zhuang-kuo-zhan">安装扩展</span><a href="#an-zhuang-kuo-zhan" class="header-anchor">#</a></h3><p>解压缩扩展文件，把DLL扩展文件放到PHP扩展文件夹里面。</p><blockquote><p>如果不知道PHP扩展文件夹的位置，从php.ini里搜索extension_dir&#x3D;”…”可以找到。</p></blockquote><p>在php.ini文件里添加</p><blockquote><p>extension&#x3D;php_redis.dll</p></blockquote><p>即可。</p><h3><span id="ce-shi">测试</span><a href="#ce-shi" class="header-anchor">#</a></h3><p>重启服务器，访问 <strong>phpinfo.php</strong> ，如果看到有目标扩展信息，即表示安装成功。<br><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1gi1x40ful0j20q903ut8k.jpg" width="700" align="bottom"></p><center>测试redis扩展</center>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Windows下，PHP添加扩展，步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到目标扩展&lt;/li&gt;
&lt;li&gt;把扩展文件放到PHP扩展文件夹里&lt;/li&gt;
&lt;li&gt;添加扩展配置&lt;/li&gt;
&lt;li&gt;重启&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面以添加redis扩展为例。&lt;/p&gt;
&lt;h3&gt;&lt;s</summary>
      
    
    
    
    <category term="php" scheme="http://chenfeng.org/categories/php/"/>
    
    
    <category term="php" scheme="http://chenfeng.org/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>穿越大南山</title>
    <link href="http://chenfeng.org/2020/08/08/dananshan/"/>
    <id>http://chenfeng.org/2020/08/08/dananshan/</id>
    <published>2020-08-08T19:00:00.000Z</published>
    <updated>2022-06-18T17:56:35.171Z</updated>
    
    <content type="html"><![CDATA[<p><audio src="http://music.163.com/song/media/outer/url?id=27483202.mp3" controls autoplay loop preload="auto">任我行——陈奕迅</audio></p><p>第一次看到大南山的图片是蓝蓝的天空，厚厚的白云，绿油油的草原，颇有几分大西北的感觉，如果有多几只牛羊，以假乱真足矣。这如画的风景不去可惜了，于是叫上朋友一起报名，参加了8月8日周六的活动。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkwg9mkprj31400u04qr.jpg" width="700" align="bottom"><p>大南山位于惠州市惠东县与汕尾市海丰县接壤的地带，此地群峰耸峙，林深壑幽，山腰白练飘飘，山下溪涧奔流。<br>三五村落散布其间，恍若桃源。因有著名的南山寺、南山河，故统称南山。</p><p>当天上午7:30出发，经过3个多小时的车程，到达惠东县南山村，下车后集体做热身动作，将近11点的时候，开始进山。</p><p>进山首先就遇到上坡，虽然坡度不陡，但是一开始连续上坡的话可能会造成身体不适，所以领队也建议走一段歇一段，让身体逐渐进入状态。</p><p>大概12点的时候到达午餐点（此时还没走3公里），午餐点是一条较为平坦的土路，路面铺满了枯萎的落叶。<br>路两边长有很高的树，把中午的阳光都挡住了，感觉阴凉。<br>大家纷纷在路的两旁挨着树坐下，先到的在前面，后到的坐后面，如此一排坐下去。<br>领队切好了西瓜，就沿着两边一个一个分过去。</p><p>午餐既丰富又有惊喜，同行的小伙伴们纷纷拿出了“珍藏”，发挥户外分享精神，有提子、小番茄、青瓜。<br>有的小伙伴热情的很，端着盒小番茄一个人一个人的问过去：“吃一个，吃一个”。</p><p>冰镇西瓜基本是标配，令我感到惊喜的是领队还带了私家辣条和冰镇可乐，顿时引起一阵骚动。</p><blockquote><p>要知道什么时候的可乐最好喝，肯定是运动后，大汗淋漓，筋疲力尽，可乐犹如催化剂一般将你激活。</p></blockquote><p>相比较而言我带的冬枣和青柑不太受欢迎，但我觉得也不错啊。<br>一巡吃下来，差不多有五六分饱了，手上的八宝粥也不“香”了，但为了后面不至于体力下降，还是把八宝粥吃了下去。</p><p>酒足饭饱好赶路，短暂休整后就开始跟着前队出发了。</p><p>因为刚吃东西不久，所以行进的速度也没敢太快，就当作散步那样慢走。没多久就走出了丛林，来到了令人找不到北的茅草荡前。</p><p>茅草长得又高又密，刚进去手指就被割了，虽然流了点血，不过也仅仅是皮外伤，无大碍。<br>领队说的要武装到牙齿，应该就是指这一段吧！<br>庆幸的是，这一段不用五分钟就穿过了。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqqbyy51j31400u0e83.jpg" width="700" align="bottom"><center>茅草荡</center><p>因为在茅草荡里都是弯腰低头走路的，所以出来的第一个感觉就像重见天日一般，不仅如此，还看到了接下来要上的第一个急升坡，像一块绿色的毯子一样挂在那里，第一次如此亲近草原，迫不及待来一张。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqqzj0r1j30u0140e83.jpg" width="700" align="bottom"><p>终于来到第一座山前面，装好水就开始上山了。这一座山爬升高度有400多米，由半山腰的一个平台分成两节。</p><p>上第一节的时候，我们已经被前队的人甩掉了，自然的就变成了中队的人。<br>爬升没一会儿就开始喘息，在山脊上稍站了一下，发现完全没风，而且还很闷热，于是就继续跟着爬升，想着尽快到达平台。</p><p>在快要到达平台的时候，感觉到呼吸不畅，有呕吐的感觉，于是才马上停下来，大口呼吸，努力让心率降下来。<br>经过调整节奏，放缓速度，最后才颤巍巍的到达平台，没有被领队拉爆，自己反而“爆了”，策略错误。</p><blockquote><p>所以说，无论是爬山还是跑步，都要时刻关注自己的呼吸，重视身体给出的信号，要根据当前的体力情况来调整速度和节奏。<br>切莫盲目的跟着前面的人或者跟别人比拼耐力，也不要因为挡到后面的人而强忍着继续前进。</p></blockquote><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqs5lpifj31dz0u01l2.jpg" width="700" align="bottom"><center>第一座山 山底</center><p>到达第一座山顶峰后，累得直接坐下来，顺手把刚刚吃剩下的提子小番茄冬枣和青柑拿出来，做一轮补充，顺便也减一下负。</p><p>没过多久尾队的领队也到了，我和我朋友都惊呆了！<br>我们跟着前队出发，和中队一起上山，最后在山顶休息，变成了尾队。我“断后大师”的小目标实现得太突然了。<br>于是赶紧收拾东西，撇了。</p><p>一段短暂的下坡后就下山了，接着就是3公里的机耕路。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkprnacfej31400u07wj.jpg" width="700" align="bottom"><center>第一座山 山顶</center><p>机耕路好走很多了，我加快了脚步想要去追中队。但是发现朋友速度没跟上，或许是刚刚的上坡太猛还没恢复，在确定了水量和食物足够后，我就先去追中队了。</p><p>连走带跑的追到中队伍并且超过了中队的领队，赶在15点前到达第二座山下。</p><blockquote><p>后来才意识到，其实不用那么赶的，如果体力足够的话，领队也不会阻止你登顶的。设置关门时间，可能是想给一些想要提前下撤的队友多一个选择，或者说是帮他们做一个选择，当然最重要的还是自己决定。</p></blockquote><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqi1wegdj30u01401l0.jpg" width="700" align="bottom"><center>机耕路</center><p>短暂的休息，喝水，装水后，开始上第二座山。</p><p>第二座山爬升高度有100多米，由山腰的一个平台分成两节。</p><p>这一次格外注意上升速度，累了就歇，避免再次出现身体不适。<br>行走在山脊上，同样的无风，闷热。<br>走累了就停一下，一停下来就感觉到身体不断的在散发热量，汗水滴在乱石上，一下子就不见了，所以停下来好像也没舒服多少。<br>只能集中精神，忍着慢慢上。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqigogzij30u0140x6p.jpg" width="700" align="bottom"><center>第二座山 山底</center><p>终于到达山腰的平台，队友们聚集在悬崖边聊天、看风景、补充食物。</p><p>一阵风吹来，大家都安静了。微风带走身体多余的热量，带走暑气，舒服，沁人心脾。</p><p>在平台上眺望那条长长的机耕路，看到三三两两的人群，回想起刚刚一个人连走带跑的情景，心想我刚刚是否走太快了？以至于遗落了一些什么东西。</p><blockquote><p>但生活中不就是这样吗？总是为了实现一个目标一条路走到黑，而忽略了过程中的美景，这注定无法兼得。</p></blockquote><p>陈老师说：“我知道草原上又扬起微风，就该要说再见”。</p><p>是的，感谢微风带走疲倦，我还要赶路，再见。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqk61olqj31400u01ky.jpg" width="700" align="bottom"><center>第二座山 平台</center><p>第二节爬升高度大约50米，难度不大，不用15分钟就登顶了。</p><p>顶峰——斧头石，无遮无挡，明显更晒，但风景却最好。</p><p>往前看，可以看到大海，那是惠州的内海湾，惠州海湾大桥横跨南北两岸；<br>左边是一片低矮的山地，散布着村落，还有几根大烟囱，冒着浓浓白烟；<br>右边是陡峭的悬崖，还有连绵不绝的山脉；<br>后面正是来时的路，陡峭的山脊直通山脚下，远处则是那条如黄色丝带般的机耕路，连接着两座高山。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqktwatnj31400u0qv7.jpg" width="700" align="bottom"><center>第二座山 山顶</center><p>正当休息的时候，意外发现朋友就在下面的平台，正在往上面走。最后能一起登顶当然是最好的结果，也是最开心的事情。</p><p>大约16点的时候，尾队的小伙伴全部登顶了，拍了个大合照，我们就先下撤了。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkqlxakwbj31400u0af5.jpg" width="700" align="bottom"></p><center>大合照</center><p>下撤路是一条长长的下坡路（如下海拔图，从最高点一直到最低点），相对来说，下坡路容易一点，但需要一些技巧。<br>考虑到领队几次强调这一次下坡比较长，所以一开始就借用了朋友的一根登山杖并尝试使用，庆幸的是走到这里已经能熟练的借力登山杖了。</p><p>下山后在想，或许正因为有登山杖的帮助，我才能顺利的下山。<br>因为记得有几个地方是比较陡峭的黄土坡，黄土经过雨水的冲刷，变得湿润，踩上去极容易打滑，稍不留神就会摔屁股。登山杖就是在你打滑的时候给你一个支撑，留给你更多的反应时间。<br>由此也一改我以前对登山杖的看法。</p><blockquote><p>其实每个工具被创造出来，自有它的用处，如果你觉得没用，那可能是你还不会用，或者是还没用到它的时候。</p></blockquote><p>走过漫长的“绝望坡”，穿过狂野的乱石路，终于看到了大马路，终点就在眼前了。<br>最后自娱自乐的“冲刺”通过围栏，“恭喜第五名第六名选手完成穿越”。</p><img src="http://tva2.sinaimg.cn/large/7d4c6366gy1ghlspl2j1qj20yi0twwgg.jpg" width="700" align="bottom"><center>路线海拔图</center><p>终于到达终点——大王庙，来到大王庙对面的小吃店歇息，此时啥也吃不下，整两碗糖水先。</p><p>小吃店有厕所可以免费洗澡，虽然条件简陋，但能把那身被汗水湿透的衣服换洗下来，已经很满足了。</p><p>接下来就是等待尾队的小伙伴下来，直到19点的时候，才看到尾队的领队，19:30全员上车，返回广州，大约22:30抵达客村地铁站，结束今天的行程。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkql7dmdkj31400u01ky.jpg" width="700" align="bottom"></p><center>小吃店</center><p>本次行程有14公里，累计爬升将近1000米，耗时6小时20分。<br>从南山村出发，登顶斧头石，最后安全到达大王庙。<br><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghkplfcccij30u00ymtaa.jpg" width="700" align="bottom"></p><center>轨迹图</center>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;audio src=&quot;http://music.163.com/song/media/outer/url?id=27483202.mp3&quot; controls autoplay loop preload=&quot;auto&quot;&gt;任我行——陈奕迅&lt;/audio&gt;&lt;/p&gt;
&lt;p&gt;第一次看</summary>
      
    
    
    
    <category term="personal" scheme="http://chenfeng.org/categories/personal/"/>
    
    
    <category term="爬山" scheme="http://chenfeng.org/tags/%E7%88%AC%E5%B1%B1/"/>
    
    <category term="游玩" scheme="http://chenfeng.org/tags/%E6%B8%B8%E7%8E%A9/"/>
    
  </entry>
  
  <entry>
    <title>一种不需要比较的排序方法——基数排序</title>
    <link href="http://chenfeng.org/2020/08/02/radix-sort/"/>
    <id>http://chenfeng.org/2020/08/02/radix-sort/</id>
    <published>2020-08-02T05:00:00.000Z</published>
    <updated>2022-06-21T14:24:24.680Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="suan-fa-si-xiang">算法思想</span><a href="#suan-fa-si-xiang" class="header-anchor">#</a></h3><p>基数排序是一种借助于多关键字排序的思想对单关键字排序的方法。</p><blockquote><p>基数排序也有人称桶排序，因为借助于10个桶（0~9号桶）临时存放记录。</p></blockquote><p>基数排序算法通过若干次 $(loop)$ 分配和收集实现排序。$loop$ 值由最大的记录关键值的位数决定，例如待排序的表中，最大的记录关键值为100，那么 $loop$ 等于3，需要3次分配和收集才能实现有序表。</p><p>第一次分配，需要取 记录关键值的个位数 为索引值，存放到对应的桶里面，如果有相同的索引值，则按顺序存储。</p><p>第一次收集，需要按桶的索引值和桶里面记录值的顺序收集。</p><p>这样就完成了第一次分配和收集。</p><p>第二次、第三次分配收集也是按照这样的过程完成。</p><blockquote><p>一道使用基数排序解决的题 <a href="/2020/06/06/leetcode-128">leetcode 128h 最长连续序列</a></p></blockquote><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghf8mu99ujj30u016fti8.jpg" width="700" align="bottom"><h3><span id="xing-neng-ping-jie">性能评价</span><a href="#xing-neng-ping-jie" class="header-anchor">#</a></h3><p>时间复杂度：$O(n)$</p><p>稳定性：稳定</p><h3><span id="ji-shu-pai-xu-wan-zheng-dai-ma">基数排序完整代码</span><a href="#ji-shu-pai-xu-wan-zheng-dai-ma" class="header-anchor">#</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> InfoType[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    InfoType data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125; RecType;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType *p)</span>;</span><br><span class="line">RecType* <span class="title function_">generalPNode</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">getMaxNum</span><span class="params">(RecType *p)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">GetMaxLoop</span><span class="params">(<span class="type">int</span> num)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">getBaseNum</span><span class="params">(<span class="type">int</span> num,<span class="type">int</span> numSt)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RadixSort</span><span class="params">(RecType **p)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  基数排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    RecType *p;</span><br><span class="line">    KeyType a[] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    p =generalPNode(a, n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">    DisRecType(p);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;基数排序 ... \n&quot;</span>);</span><br><span class="line">    RadixSort(&amp;p);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line">    DisRecType(p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出序列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType *p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;key);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  构造基数排序存储结构</span></span><br><span class="line">RecType* <span class="title function_">generalPNode</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    RecType *p = <span class="literal">NULL</span>,*q = <span class="literal">NULL</span>,*tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;numsSize;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = (RecType *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(RecType));</span><br><span class="line">        tmp-&gt;key = nums[i];</span><br><span class="line">        tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span>(q == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            q = tmp;</span><br><span class="line">            p = q;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            q-&gt;next = tmp;</span><br><span class="line">            q = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  归并排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RadixSort</span><span class="params">(RecType **p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> max = getMaxNum(*p);</span><br><span class="line">    <span class="type">int</span>loop = GetMaxLoop(max);</span><br><span class="line"></span><br><span class="line">    RecType *head[<span class="number">10</span>],*tail[<span class="number">10</span>],*tmp;</span><br><span class="line">    <span class="type">int</span> i,j,k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= loop; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  每次循环，先清空各个桶里的数据</span></span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">            head[j] = tail[j] = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  分配</span></span><br><span class="line">        <span class="comment">//  把链表的分配到指定的桶里</span></span><br><span class="line">        <span class="comment">//  由于是链式存储，所以每个桶里的实际数据是head和tail指针之间的节点</span></span><br><span class="line">        <span class="keyword">while</span> ((*p) != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            k = getBaseNum((*p)-&gt;key,i);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (head[k] == <span class="literal">NULL</span>)</span><br><span class="line">                head[k] = (*p);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                tail[k]-&gt;next = (*p);</span><br><span class="line"></span><br><span class="line">            tail[k] = (*p);</span><br><span class="line">            (*p) = (*p)-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  重置链表</span></span><br><span class="line">        (*p) = <span class="literal">NULL</span>;     </span><br><span class="line"></span><br><span class="line">        <span class="comment">//  收集</span></span><br><span class="line">        <span class="comment">//  各个桶里的实际数据是有head和tail指针确定的</span></span><br><span class="line">        <span class="comment">//  所以把各个桶按顺序，按照 tail-&gt;next = head 连接起来</span></span><br><span class="line">        <span class="comment">//  最后把 tail-&gt;next = NULL 就完成了收集工作</span></span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (head[j] != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((*p) == <span class="literal">NULL</span>)</span><br><span class="line">                    (*p) = head[j];    </span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    tmp-&gt;next = head[j];</span><br><span class="line">                tmp = tail[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  返回最大关键值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getMaxNum</span><span class="params">(RecType *p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(p-&gt;key &gt; max) max = p-&gt;key;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  返回整数的位数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetMaxLoop</span><span class="params">(<span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> bits = <span class="number">1</span>;</span><br><span class="line">num /= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span> (num != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">++bits;</span><br><span class="line">num /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bits;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  返回整数指定位序号的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">getBaseNum</span><span class="params">(<span class="type">int</span> num,<span class="type">int</span> numSt)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> numTimes = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> i,baseNum;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;numSt;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        numTimes *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    baseNum = num/numTimes%<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> baseNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;suan-fa-si-xiang&quot;&gt;算法思想&lt;/span&gt;&lt;a href=&quot;#suan-fa-si-xiang&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;基数排序是一种借助于多关键字排序的思想对单关键字排序的方法。&lt;/p&gt;</summary>
      
    
    
    
    <category term="ds" scheme="http://chenfeng.org/categories/ds/"/>
    
    
    <category term="数据结构" scheme="http://chenfeng.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序" scheme="http://chenfeng.org/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>归并排序</title>
    <link href="http://chenfeng.org/2020/08/01/merge-sort/"/>
    <id>http://chenfeng.org/2020/08/01/merge-sort/</id>
    <published>2020-08-01T05:00:00.000Z</published>
    <updated>2022-06-21T14:24:18.821Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="suan-fa-si-xiang">算法思想</span><a href="#suan-fa-si-xiang" class="header-anchor">#</a></h3><p>归并排序简单的来说是把两个有序表合并成一个有序表。</p><p>一开始从规模最小的只有1个记录的两个表开始合并，使待排序表局部有序。<br>随着记录规模的扩大，待排序表从局部有序逐渐变成整体有序。</p><blockquote><p>每一次循环的规模都遵循2倍数扩大，从一开始的1个记录，到2、4、8、…，递增。</p></blockquote><p>每一次归并排序都需要借助开辟的存储空间来保存合并后的有序表，然后再复制到原来的表上，不能在原来的表上直接操作。</p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1ghf8kk991yj30u016fjyp.jpg" width="700" align="bottom"><h3><span id="xing-neng-ping-jie">性能评价</span><a href="#xing-neng-ping-jie" class="header-anchor">#</a></h3><p>时间复杂度：$O(nlog_2n)$</p><p>稳定性：稳定</p><h3><span id="gui-bing-pai-xu-wan-zheng-dai-ma">归并排序完整代码</span><a href="#gui-bing-pai-xu-wan-zheng-dai-ma" class="header-anchor">#</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> InfoType[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    InfoType data;</span><br><span class="line">&#125; RecType;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSortWithLength</span><span class="params">(RecType R[],<span class="type">int</span> length,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Merge</span><span class="params">(RecType R[],<span class="type">int</span> left,<span class="type">int</span> mid,<span class="type">int</span> right)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  归并排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    KeyType a[] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    RecType R[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        R[i].key = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;归并排序 ... \n&quot;</span>);</span><br><span class="line">    MergeSort(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出序列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,R[i].key);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> length=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (length &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        MergeSortWithLength(R,length,n);</span><br><span class="line">        length *= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">MergeSortWithLength</span><span class="params">(RecType R[],<span class="type">int</span> length,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;                  <span class="comment">//  第一个有序数组开始下标   </span></span><br><span class="line">    <span class="type">int</span> k = i + length - <span class="number">1</span>;     <span class="comment">//  第一个有序数组结束下标           </span></span><br><span class="line">    <span class="type">int</span> j = i + <span class="number">2</span>*length - <span class="number">1</span>;   <span class="comment">//  第二个有序数据结束下标</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        Merge(R,i,k,j);</span><br><span class="line">        i = j + <span class="number">1</span>;</span><br><span class="line">        k = i + length - <span class="number">1</span>;</span><br><span class="line">        j = i + <span class="number">2</span>*length - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  剩下至少有 length 个记录，才需要整理排序</span></span><br><span class="line">    <span class="keyword">if</span>(k &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        Merge(R,i,k,n<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  合并两个有序数组成一个有序数组</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Merge</span><span class="params">(RecType R[],<span class="type">int</span> left,<span class="type">int</span> mid,<span class="type">int</span> right)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = left,j = mid + <span class="number">1</span>,k=<span class="number">0</span>;</span><br><span class="line">    RecType *tmp = (RecType *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(RecType) * (right-left+<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right)</span><br><span class="line">        <span class="keyword">if</span>(R[i].key &lt; R[j].key)</span><br><span class="line">            tmp[k++] = R[i++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            tmp[k++] = R[j++];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid)</span><br><span class="line">        tmp[k++] = R[i++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= right)</span><br><span class="line">        tmp[k++] = R[j++];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>,i = left; i&lt;=right; i++,k++)</span><br><span class="line">        R[i] = tmp[k]; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;suan-fa-si-xiang&quot;&gt;算法思想&lt;/span&gt;&lt;a href=&quot;#suan-fa-si-xiang&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;归并排序简单的来说是把两个有序表合并成一个有序表。&lt;/p&gt;
&lt;p&gt;一</summary>
      
    
    
    
    <category term="ds" scheme="http://chenfeng.org/categories/ds/"/>
    
    
    <category term="数据结构" scheme="http://chenfeng.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序" scheme="http://chenfeng.org/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>选择排序——直接选择排序、堆排序</title>
    <link href="http://chenfeng.org/2020/07/30/select-sort/"/>
    <id>http://chenfeng.org/2020/07/30/select-sort/</id>
    <published>2020-07-30T05:00:00.000Z</published>
    <updated>2022-06-21T14:23:46.274Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="suan-fa-si-xiang">算法思想</span><a href="#suan-fa-si-xiang" class="header-anchor">#</a></h3><p>每一趟从待排序的记录中选出关键字最小的记录，顺序放在已排好序的子表的最后，直到全部记录排序完毕。 </p><h3><span id="liang-chong-xuan-ze-pai-xu-fang-fa">两种选择排序方法</span><a href="#liang-chong-xuan-ze-pai-xu-fang-fa" class="header-anchor">#</a></h3><ol><li>直接选择排序</li><li>堆排序</li></ol><h3><span id="zhi-jie-xuan-ze-pai-xu">直接选择排序</span><a href="#zhi-jie-xuan-ze-pai-xu" class="header-anchor">#</a></h3><p><strong>基本思想</strong></p><p>设有n个元素，则需要n-1次循环。<br>每次循环通过两两对比，找到关键值最小的记录，经过n-1次循环后则可以得到一个有序的序列。</p><p><strong>代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//  R[i]的关键值与R[j]的关键值逐个比较，每次把较小的赋值给R[i]</span></span><br><span class="line">            <span class="comment">//  存在交换多次的问题</span></span><br><span class="line">            <span class="keyword">if</span>(R[i].key &gt; R[j].key)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = R[i];</span><br><span class="line">                R[i] = R[j];</span><br><span class="line">                R[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>性能评价</strong></p><p>时间复杂度：$O(n^2)$</p><p>稳定性：非稳定</p><h3><span id="zhi-jie-xuan-ze-pai-xu-you-hua-ban">直接选择排序 优化版</span><a href="#zhi-jie-xuan-ze-pai-xu-you-hua-ban" class="header-anchor">#</a></h3><p><strong>基本思想</strong></p><p>直接选择排序在每一次找到最小值的过程中，需要进行多次关键值比较。<br>若比较结果成立，则记录的位置互换（执行赋值操作）。<br>例如要求关键字序列：<code>9 8 7 6 5</code> 按递增顺序显示，程序的第一次遍历结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1&gt;   9 8 7 6 5 </span><br><span class="line">2&gt;   8 9 7 6 5</span><br><span class="line">3&gt;   7 9 8 6 5</span><br><span class="line">4&gt;   6 9 8 7 5</span><br><span class="line">5&gt;   5 9 8 7 6</span><br></pre></td></tr></table></figure><p>很明显，第一次遍历找到的最小值应该是 <code>5</code>，但是找到最小值过程中，发生了多次无用的赋值操作（第2、3、4行）。<br>为了减少时间复杂度，在比较的过程中，使用一个变量保存最小值的索引值，直到与最后一个元素比较后，才执行赋值操作。优化后的程序第一次遍历的结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1&gt;   9 8 7 6 5 </span><br><span class="line">2&gt;   5 9 8 7 6</span><br></pre></td></tr></table></figure><p><strong>代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  选择排序 优化版</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort_v2</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  默认第一个元素是最小的</span></span><br><span class="line">        k = i;      </span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(R[k].key &gt; R[j].key)</span><br><span class="line">                k = j;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//  最后做一次比较，不相等则互相交换</span></span><br><span class="line">        <span class="keyword">if</span>(i != k)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = R[k];</span><br><span class="line">            R[k] = R[i];</span><br><span class="line">            R[i] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>性能评价</strong></p><p>时间复杂度：$O(n^2)$</p><p>稳定性：非稳定</p><h3><span id="zhi-jie-xuan-ze-pai-xu-dai-ma">直接选择排序代码</span><a href="#zhi-jie-xuan-ze-pai-xu-dai-ma" class="header-anchor">#</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> InfoType[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    InfoType data;</span><br><span class="line">&#125; RecType;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort_v2</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  选择排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    KeyType a[] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    RecType R[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        R[i].key = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;选择排序 ... \n&quot;</span>);</span><br><span class="line">    SelectSort(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;选择排序 改进版... \n&quot;</span>);</span><br><span class="line">    SelectSort_v2(R,n);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出序列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,R[i].key);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//  R[i]的关键值与R[j]的关键值逐个比较，每次把较小的赋值给R[i]</span></span><br><span class="line">            <span class="comment">//  存在交换多次的问题</span></span><br><span class="line">            <span class="keyword">if</span>(R[i].key &gt; R[j].key)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = R[i];</span><br><span class="line">                R[i] = R[j];</span><br><span class="line">                R[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  选择排序 改进版</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort_v2</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  默认第一个元素是最小的</span></span><br><span class="line">        k = i;      </span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            <span class="keyword">if</span>(R[k].key &gt; R[j].key)</span><br><span class="line">                k = j;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//  最后做一次比较，不相等则互相交换</span></span><br><span class="line">        <span class="keyword">if</span>(i != k)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp = R[k];</span><br><span class="line">            R[k] = R[i];</span><br><span class="line">            R[i] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="dui-pai-xu">堆排序</span><a href="#dui-pai-xu" class="header-anchor">#</a></h3><p><strong>完全二叉树简介</strong></p><p>使用待排序 关键值序列 构建一棵完全二叉树，然后从上到下，从左到右，按顺序给完全二叉树编号。</p><blockquote><p>使用顺序存储结构，所以物理编号为 $0$ 的位置为空，从物理编号为 $1$ 的位置开始保存关键值。</p></blockquote><p>根据完全二叉树的性质可知：</p><ol><li>若编号为 $i$ 的节点为分支节点，则 $2i$ 为左子节点，$2i+1$ 为右子节点；</li><li>若编号为 $i$ 的节点有父节点，则父节点编号为 $floor(\frac {i} {2})$ ；</li><li>若完全二叉树有 $n$ 个节点，则编号最大的分支节点为 $floor(\frac {n}{2})$ ；</li></ol><p><strong>堆的定义</strong></p><p>$n$ 个关键字序列 $K_1,K_2,…,K_n$ 称为堆，当且仅当该序列满足如下性质：</p><ol><li>$K_i&lt;&#x3D;K_{2i}$ 且 $K_i&lt;&#x3D;K_{2i+1}$ </li><li>或 $K_i&gt;&#x3D;K_{2i}$ 且 $K_i&gt;&#x3D;K_{2i+1}$<br>$(1&lt;&#x3D;i&lt;&#x3D;floor(\frac {n}{2}))$</li></ol><p>堆可分为小根堆和大根堆：</p><ol><li>小根堆：根节点关键值 <strong>小于等于</strong> 左右子节点关键值的堆；</li><li>大根堆：根节点关键值 <strong>大于等于</strong> 左右子节点关键值的堆；</li></ol><p><strong>基本思想</strong></p><p>从编号最大的分支节点开始（编号为 $floor(\frac {n}{2})$ ），<strong>最大堆化</strong> 每一棵树，直到根节点结束。<br>此时得到一个最大堆，因为最大堆的根节点关键值最大，所以保存根节点，然后使用最有一个叶子节点赋值给根节点，继续堆化，直到最后一个节点结束。</p><p><strong>代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  堆排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HeapSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=n/<span class="number">2</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        Heapify(R,i,n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(j=n;j&gt;<span class="number">0</span>;j--)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = R[j];</span><br><span class="line">        R[j] = R[<span class="number">1</span>];</span><br><span class="line">        R[<span class="number">1</span>] = tmp;</span><br><span class="line">        Heapify(R,<span class="number">1</span>,j<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  最大堆化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Heapify</span><span class="params">(RecType R[],<span class="type">int</span> p,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    tmp = R[p];</span><br><span class="line">    i = p;</span><br><span class="line">    j = <span class="number">2</span> * p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有至少一个子节点</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  有两个子节点则找到较大的那个</span></span><br><span class="line">        <span class="keyword">if</span>(j &lt; n &amp;&amp; R[j].key &lt; R[j+<span class="number">1</span>].key) j++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  父节点比子节点小，则子节点“上浮”到父节点，并且继续堆化</span></span><br><span class="line">        <span class="keyword">if</span>(tmp.key &lt; R[j].key)</span><br><span class="line">        &#123;</span><br><span class="line">            R[i] = R[j];</span><br><span class="line">            i = j;</span><br><span class="line">            j = <span class="number">2</span> * j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    R[i] = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>性能评价</strong></p><p>时间复杂度：$O(nlog_2n)$</p><p>稳定性：非稳定</p><h3><span id="dui-pai-xu-wan-zheng-dai-ma">堆排序完整代码</span><a href="#dui-pai-xu-wan-zheng-dai-ma" class="header-anchor">#</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> KeyType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">char</span> InfoType[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    KeyType key;</span><br><span class="line">    InfoType data;</span><br><span class="line">&#125; RecType;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HeapSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Heapify</span><span class="params">(RecType R[],<span class="type">int</span> p,<span class="type">int</span> n)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  选择排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">10</span>;</span><br><span class="line">    KeyType a[] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    RecType R[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        R[i+<span class="number">1</span>].key = a[i];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;堆排序... \n&quot;</span>);</span><br><span class="line">    HeapSort(R,n);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line">    DisRecType(R,n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出序列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisRecType</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,R[i+<span class="number">1</span>].key);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  堆排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HeapSort</span><span class="params">(RecType R[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    <span class="keyword">for</span>(i=n/<span class="number">2</span>;i&gt;<span class="number">0</span>;i--)</span><br><span class="line">        Heapify(R,i,n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(j=n;j&gt;<span class="number">0</span>;j--)</span><br><span class="line">    &#123;</span><br><span class="line">        tmp = R[j];</span><br><span class="line">        R[j] = R[<span class="number">1</span>];</span><br><span class="line">        R[<span class="number">1</span>] = tmp;</span><br><span class="line">        Heapify(R,<span class="number">1</span>,j<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  堆化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Heapify</span><span class="params">(RecType R[],<span class="type">int</span> p,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    RecType tmp;</span><br><span class="line">    tmp = R[p];</span><br><span class="line">    i = p;</span><br><span class="line">    j = <span class="number">2</span> * p;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有至少一个子节点</span></span><br><span class="line">    <span class="keyword">while</span> (j &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//  有两个子节点则找到较大的那个</span></span><br><span class="line">        <span class="keyword">if</span>(j &lt; n &amp;&amp; R[j].key &lt; R[j+<span class="number">1</span>].key) j++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  父节点比子节点小，则子节点“上浮”到父节点，并且继续堆化</span></span><br><span class="line">        <span class="keyword">if</span>(tmp.key &lt; R[j].key)</span><br><span class="line">        &#123;</span><br><span class="line">            R[i] = R[j];</span><br><span class="line">            i = j;</span><br><span class="line">            j = <span class="number">2</span> * j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    R[i] = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;&lt;span id=&quot;suan-fa-si-xiang&quot;&gt;算法思想&lt;/span&gt;&lt;a href=&quot;#suan-fa-si-xiang&quot; class=&quot;header-anchor&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;每一趟从待排序的记录中选出关键字最小的记录，顺序放在已排好序的子表的</summary>
      
    
    
    
    <category term="ds" scheme="http://chenfeng.org/categories/ds/"/>
    
    
    <category term="数据结构" scheme="http://chenfeng.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="排序" scheme="http://chenfeng.org/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
